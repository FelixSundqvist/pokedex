{"version":3,"sources":["PokemonGeneration.js","components/UI/Button/Button.js","utility/index.js","components/UI/Loading/Loading.js","components/UI/ChangeGenButtons/ChangeGenButtons.js","components/GenButtons/GenButtons.js","components/GBScreen/GBScreen.js","components/UI/PokedexScanner/PokedexScanner.js","components/Wrapper/Wrapper.js","assets/pokedex-lens.svg","assets/loading.gif","store/actions/actionTypes.js","components/CardList/Card/Card.js","components/CardList/CardList.js","containers/Pokédex/Pokédex.js","components/Menu/Menu.js","App.js","serviceWorker.js","theme/index.js","store/reducers/reducer.js","store/sagas/sagas.js","index.js"],"names":["generations","start","end","withTheme","props","StyledButton","styled","div","_templateObject","selected","theme","palette","secondary","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","onClick","children","getIDFromURL","url","match","split","checkLetter","str","toUpperCase","replace","roundNum","height","round","Number","parseFloat","toFixed","Loading","LoadingWrapper","src","loadinImage","alt","ChangeGenButtons","React","memo","BtnWrapper","genButtons","map","cur","index","react_default","Button","key","genClick","currentGen","connect","state","selectedGen","dispatch","gen","type","actionTypes","StyledGens","header","GenButtons_templateObject","ChangeGenButtons_ChangeGenButtons","ScreenFrame","GBScreen_templateObject","ScreenInner","_templateObject2","black","PokedexScanner","Wrapper","PokedexScanner_templateObject","PokeScanner","PokedexScanner_templateObject2","lensIcon","_ref","scanner","StyledWrapper","Wrapper_templateObject","primaryDark","components_GenButtons_GenButtons","UI_PokedexScanner_PokedexScanner","components_GBScreen_GBScreen","module","exports","__webpack_require__","p","d","__webpack_exports__","FETCH_PKMN_START","FETCH_PKMN_SUCCESS","FETCH_PKMN_FAIL","LOADING_POKEMONS","CHANGE_GEN","FETCH_CURRENT_PKMN_START","FETCH_CURRENT_PKMN_SUCCESS","FETCH_CURRENT_PKMN_FAIL","LOADING_CURRENT_PKMN","FETCH_EVO_CHAIN_START","FETCH_EVO_CHAIN_SUCCESS","FETCH_EVO_CHAIN_FAIL","Card","name","id","StyledCard","Image","concat","CardList","items","useMemo","Fragment","current","CardList_Card_Card","Pokedex","fetchAllPokemons","pokemons","useRef","isLoading","useEffect","components_CardList_CardList","selectedPokemonId","history","push","isLoadingCurrent","Menu","CurrentPokemon","lazy","e","then","bind","StyledApp","App_templateObject","className","components_Menu_Menu","react","fallback","react_router","path","component","Boolean","window","location","hostname","primary","secondaryDark","white","initialState","selectedPokemon","pokedexInfo","evolutionChain","isLoadingPokemons","newState","oldState","Object","objectSpread","reducer","arguments","length","undefined","action","updateState","toConsumableArray","fetchPkmnSuccess","fetchCurrentPkmnSuccess","startFetchAll","startFetchSelected","startFetchEvoChain","mySaga","actions","regenerator_default","wrap","_context","prev","next","put","call","axios","get","res","data","results","catch","err","alert","sent","t0","error","stop","_marked","species","_context2","console","log","evoChainURL","evolution_chain","_marked2","evoChain","_context3","_marked3","_context4","takeEvery","_marked4","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","es","react_router_dom","basename","styled_components_browser_esm","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b188220c.chunk.js","sourcesContent":["const generations = [\r\n    {start: 0, end: 151},\r\n    {start: 151, end: 100},\r\n    {start: 251, end: 135},\r\n    {start: 386, end: 107},\r\n    {start: 493, end: 156},\r\n    {start: 649, end: 72},\r\n    {start: 721, end: 86}\r\n]\r\n\r\nexport default generations;","import React from 'react'\r\nimport styled, { withTheme } from 'styled-components';\r\n\r\nconst Button = props => {\r\n    const StyledButton = styled.div`\r\n    margin: 8px;\r\n    padding: 8px;\r\n    flex: 1;\r\n    border-radius: 2vh;\r\n    background-color: ${props.selected ? \"#0f11cc\" : props.theme.palette.secondary};\r\n    border: 2px solid blue;\r\n    cursor: pointer;\r\n    font-size: .5;\r\n    @media screen and (max-width: 768px){\r\n        margin: 4px;\r\n    }\r\n    &:hover{\r\n        background-color: white;\r\n        color: ${props.theme.palette.secondary}\r\n    }\r\n    \r\n    `\r\n    \r\n\r\n    return(<StyledButton onClick={props.onClick}>{props.children}</StyledButton>)\r\n}\r\n\r\nexport default withTheme(Button);","export const getIDFromURL = (url) => url.match(/\\d{1,3}\\/$/)[0].split(\"/\")[0];\r\nexport const checkLetter = str => str.toUpperCase().replace(/É/, \"E\")\r\nexport const roundNum = (height, round) => Number.parseFloat(height * round).toFixed(2)\r\nexport const createArr = (arr, newItem) => {\r\n    return [...arr, newItem]\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport loadinImage from '../../../assets/loading.gif';\r\nconst Loading = () => {\r\n    const LoadingWrapper = styled.div`\r\n        width: 100%;\r\n        height: 100%;\r\n        color: white;\r\n        span:nth-child(1){\r\n            animation: loading 300ms linear 100ms infinite;\r\n        }\r\n        span:nth-child(2){\r\n            animation: loading 300ms linear 150ms infinite;\r\n        }\r\n        span:nth-child(3){\r\n            animation: loading 300ms linear 200ms infinite;\r\n        }   \r\n\r\n        font-size: 2vw;\r\n\r\n        @keyframes loading {\r\n            from{\r\n                opacity: 1;\r\n            }\r\n            to{\r\n                opacity: 0;\r\n            }\r\n        }\r\n\r\n        img{\r\n            width: 30%;\r\n        }\r\n    `\r\n    \r\n    return <LoadingWrapper>\r\n        <img src={loadinImage} alt=\"loading\" />\r\n        <h1>LOADING<span>.</span><span>.</span><span>.</span></h1>\r\n    </LoadingWrapper>\r\n}\r\n\r\nexport default Loading;","import React from 'react'\r\nimport styled, { withTheme } from 'styled-components';\r\nimport generations from '../../../PokemonGeneration';\r\nimport Button from '../Button/Button';\r\n\r\nconst ChangeGenButtons = React.memo(props => {\r\n    const BtnWrapper = styled.div`\r\n        margin: 0 auto;\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        justify-content: space-evenly;\r\n        @media screen and (max-width: 768px){\r\n            font-size: 2vw;\r\n        }\r\n    `\r\n    const genButtons = generations.map((cur, index) => \r\n    <Button \r\n        key={\"Gen\"+index} \r\n        onClick={() => props.genClick(index)}\r\n        selected={props.currentGen + 1 === index + 1}\r\n        >{index + 1} </Button>)\r\n\r\n    return <BtnWrapper>{ genButtons }</BtnWrapper>\r\n})\r\nexport default withTheme(ChangeGenButtons);","import React from 'react';\r\nimport styled, { withTheme } from 'styled-components';\r\nimport { connect } from 'react-redux';\r\nimport ChangeGenButtons from '../UI/ChangeGenButtons/ChangeGenButtons';\r\nimport * as actionTypes from '../../store/actions/actionTypes';\r\n\r\nconst GenButtons = props => {\r\n    const StyledGens = styled.header`\r\n    width: 100%;\r\n    height: 20%;\r\n    font-family: sans-serif;\r\n    color: white;\r\n    /* box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.1); */\r\n    position:relative;\r\n    p{\r\n        margin: 0;\r\n        padding: 0;\r\n        \r\n    }\r\n    @media screen and (max-width: 768px){\r\n        h4{\r\n            font-size: 1vw;\r\n        }\r\n    }\r\n    `\r\n\r\n\r\n    return (\r\n        <StyledGens>\r\n            <p>Gen</p>\r\n            <ChangeGenButtons currentGen={props.currentGen} genClick={props.genClick} />\r\n            \r\n        </StyledGens>)\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    currentGen: state.selectedGen\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    genClick: (gen) => dispatch({ type: actionTypes.CHANGE_GEN, selectedGen: gen }),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withTheme(GenButtons));","import React from 'react'\r\nimport styled, { withTheme } from 'styled-components';\r\nimport GenButtons from '../GenButtons/GenButtons';\r\n\r\nconst GBScreen = props => {\r\n    const { theme } = props;\r\n\r\n    const ScreenFrame = styled.div`\r\n        height: 100%;\r\n        width: 100%;\r\n        overflow: scroll;\r\n        margin: 0 auto;\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        align-items: center;\r\n        justify-content: center;\r\n        \r\n        @media (max-width: 768px){\r\n            margin: 0;\r\n        }\r\n    `    \r\n    const ScreenInner = styled.div`\r\n        min-height: 100%;\r\n        min-width: 100%;\r\n        padding: 16px;\r\n        background-color: ${theme.palette.black};\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        align-items: center;\r\n        justify-content: center;\r\n    \r\n    `\r\n    return ( \r\n        <ScreenFrame >\r\n            <ScreenInner>\r\n                    {props.children}\r\n            </ScreenInner>\r\n        </ScreenFrame>\r\n    )\r\n}\r\n\r\nexport default withTheme(GBScreen);","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport lensIcon from '../../../assets/pokedex-lens.svg';\r\n\r\nconst PokedexScanner = () => {\r\n    const Wrapper = styled.div`\r\n        width: 100%;\r\n        height: 20%;\r\n        position: relative;\r\n    `\r\n    const PokeScanner = styled.div`\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        background-image: url(${lensIcon});\r\n        background-size: contain;\r\n        height: 4vw;\r\n        width: 4vw;\r\n    `\r\n    return (<Wrapper><PokeScanner /></Wrapper>)\r\n}\r\n\r\nexport default PokedexScanner;","import React from 'react'\r\nimport styled, { withTheme } from 'styled-components';\r\nimport GBScreen from '../GBScreen/GBScreen';\r\nimport GenButtons from '../GenButtons/GenButtons';\r\nimport PokedexScanner from '../UI/PokedexScanner/PokedexScanner';\r\n\r\nconst Wrapper = ({ theme, children, genButtons, scanner }) => {\r\n    const StyledWrapper = styled.div`\r\n    position: relative;\r\n    width: 50vw;\r\n    height: 40vw;\r\n    margin: 0 auto;\r\n    padding: 16px;\r\n    background-color: ${theme.palette.primaryDark};\r\n    border: .3vw solid ${theme.palette.black};\r\n    box-shadow: 5px 10px 10px ${theme.palette.black};\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    @media screen and (max-width: 768px){\r\n        width: 95vw;\r\n        height: 100vh;\r\n    }\r\n    `\r\n    \r\n    return( \r\n    <StyledWrapper>\r\n        {genButtons ? <GenButtons /> : null}\r\n        {scanner ? <PokedexScanner />: null}\r\n        <GBScreen>\r\n            {children}\r\n        </GBScreen> \r\n    </StyledWrapper>)\r\n}\r\n\r\nexport default withTheme(Wrapper)","module.exports = __webpack_public_path__ + \"static/media/pokedex-lens.e8393639.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.bd888bab.gif\";","export const FETCH_PKMN_START = 'FETCH_PKMN_START';\r\nexport const FETCH_PKMN_SUCCESS = 'FETCH_PKMN_SUCCESS';\r\nexport const FETCH_PKMN_FAIL = 'FETCH_PKMN_FAILFETCH_PKMN_FAIL';\r\nexport const LOADING_POKEMONS = 'LOADING_POKEMONS';\r\n\r\nexport const CHANGE_GEN = 'CHANGE_GEN';\r\n\r\nexport const SET_CURRENT_PKMN = 'SET_CURRENT_PKMN';\r\nexport const FETCH_CURRENT_PKMN_START = 'FETCH_CURRENT_PKMN_START';\r\nexport const FETCH_CURRENT_PKMN_SUCCESS = 'FETCH_CURRENT_PKMN_SUCCESS';\r\nexport const FETCH_CURRENT_PKMN_FAIL = 'FETCH_CURRENT_PKMN_FAIL';\r\nexport const LOADING_CURRENT_PKMN = 'LOADING_CURRENT_PKMN';\r\n\r\nexport const FETCH_EVO_CHAIN = 'FETCH_EVO_CHAIN';\r\nexport const FETCH_EVO_CHAIN_START = 'FETCH_EVO_CHAIN_START';\r\nexport const FETCH_EVO_CHAIN_SUCCESS = 'FETCH_EVO_CHAIN_SUCCESS';\r\nexport const FETCH_EVO_CHAIN_FAIL = 'FETCH_EVO_CHAIN_FAIL';\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst Card = ({name, id, onClick, selected, children}) => {\r\n    const StyledCard = styled.div`\r\n        height: 100px;\r\n        width: 100px;\r\n        background-color: white;\r\n        margin: 10px;\r\n        text-transform: capitalize;\r\n        &:hover{\r\n            cursor: pointer;\r\n        }\r\n        font-size: .5rem;\r\n        opacity: ${selected === name ? 1 : 0.5};\r\n        border: ${selected === name ? \"2px solid red \": null};\r\n        &:hover{\r\n            opacity: 0.8;\r\n        }\r\n        transition: opacity 100ms ease;\r\n        @media screen and (max-width: 425px){\r\n            width: 50px;\r\n            height: 50px;\r\n            font-size: .3rem;\r\n            margin: 2px;\r\n        }\r\n        @media screen and (max-width: 768px){\r\n            width: 80px;\r\n            height: 80px;\r\n            \r\n            margin: 4px;\r\n        }\r\n    `\r\n    const Image = styled.div`\r\n        margin:0 auto;\r\n        height: 60%;\r\n        width: 60%;\r\n        background-image: ${`url(https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png)`};\r\n        background-repeat: no-repeat;\r\n        background-size: contain;\r\n        background-position: 50% 50%;\r\n    `\r\n\r\n    return (\r\n    <StyledCard onClick={() => onClick(name)} >\r\n        <Image/>\r\n        <p>{name}</p>\r\n        <p>{children}</p>\r\n    </StyledCard>)\r\n}\r\nexport default Card;","import React, { useMemo } from 'react';\r\nimport Card from './Card/Card';\r\nimport { getIDFromURL } from '../../utility';\r\n\r\nconst CardList = ({ items, onClick, selected }) => {\r\n    const cards = useMemo(() =>         \r\n    <>\r\n        {\r\n            items.map(current => <Card \r\n                    onClick={onClick}\r\n                    selected={selected}\r\n                    id={getIDFromURL(current.url)}\r\n                    key={current.name} \r\n                    name={current.name}/>)\r\n        }\r\n    </>, \r\n    [items, onClick, selected])\r\n\r\n    return cards\r\n}\r\nexport default CardList;","import React, { useEffect, useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actionTypes from '../../store/actions/actionTypes';\r\nimport Wrapper from '../../components/Wrapper/Wrapper';\r\nimport CardList from '../../components/CardList/CardList';\r\n\r\nconst Pokedex = React.memo(props => {\r\n    const { fetchAllPokemons, selectedGen  } = props;\r\n    const pokemons = useRef(null);\r\n    pokemons.current = !props.isLoading \r\n    useEffect(() => {\r\n        fetchAllPokemons(selectedGen)\r\n    }, [selectedGen, fetchAllPokemons])\r\n\r\n    pokemons.current = !props.isLoading\r\n        ?   <CardList \r\n                selected={props.selectedPokemonId}\r\n                onClick={(id) => props.history.push(\"/id=\"+id)} \r\n                items = {props.pokemons} /> \r\n        : null;\r\n   \r\n    /* const scroll = e => console.log(e) */\r\n    return (<Wrapper genButtons>\r\n                {pokemons.current}\r\n            </Wrapper>)\r\n})\r\nconst mapStateToProps = (state) => ({\r\n    pokemons: state.pokemons,\r\n    selectedGen: state.selectedGen,\r\n    selectedPokemonId: state.selectedPokemonId,\r\n    isLoadingCurrent: state.isLoadingCurrent\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchAllPokemons: (selectedGen) => dispatch({type: actionTypes.FETCH_PKMN_START, selectedGen: selectedGen}),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Pokedex);","import React from 'react';\r\n\r\nconst Menu = props => {\r\n    return<div>MENU</div>\r\n}\r\n\r\nexport default Menu;","import React, { Suspense } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport styled, { withTheme } from 'styled-components';\r\nimport './App.css';\r\nimport Pokedex from './containers/Pokédex/Pokédex';\r\nimport Loading from './components/UI/Loading/Loading';\r\nimport Menu from './components/Menu/Menu';\r\nconst CurrentPokemon = React.lazy(() => import('./containers/CurrentPokemon/CurrentPokemon'));\r\n\r\nfunction App(props) {\r\n  const StyledApp = styled.div`\r\n    padding: 16px;\r\n    width: 100%;\r\n    min-height: 100vh;\r\n    display: flex;\r\n\r\n    @media screen and (max-width: 768px){\r\n      padding: 0;\r\n      flex-direction: column;\r\n    }\r\n  `\r\n    \r\n  return (\r\n    <div className=\"App\">\r\n      <Menu />\r\n      <StyledApp>\r\n      \r\n        <Suspense fallback={<Loading />}>\r\n          <Route path=\"/id=:id\" component={CurrentPokemon} />\r\n        </Suspense>\r\n        <Route path=\"/\" component={Pokedex} />\r\n      </StyledApp>\r\n    </div> \r\n  );\r\n}\r\n\r\nexport default withTheme(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const theme = {\r\n    palette: {\r\n        primary: '#DC0A2D',\r\n        primaryDark: '#B40824',\r\n        secondary: '#28AAFD',\r\n        secondaryDark: '#166AA3',\r\n        black: '#232323',\r\n        white: '#DEDEDE'\r\n    }\r\n}\r\n\r\nexport default theme;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    pokemons:[],\r\n    selectedGen: 0,\r\n    selectedPokemonId: \"\",\r\n    selectedPokemon: {},\r\n    pokedexInfo: {},\r\n    evolutionChain: {},\r\n    isLoadingPokemons: false,\r\n    isLoadingCurrent: false\r\n}\r\nconst newState = (oldState, newState) =>({\r\n    ...oldState,\r\n    ...newState\r\n})\r\nconst fetchPkmnSuccess = (state, pokemons) => ({...state,\r\n    isLoadingPokemons: false,\r\n    pokemons:[\r\n    ...pokemons, \r\n]})\r\nconst fetchCurrentPkmnSuccess = (state, action) => newState(state,{\r\n    isLoadingCurrent: false,\r\n    selectedPokemonId: action.selectedPokemonId,\r\n    selectedPokemon: action.selectedPokemon,\r\n    pokedexInfo: action.pokedexInfo\r\n})\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    const updateState = newState.bind(null, state);\r\n    \r\n    switch(action.type){\r\n        case(actionTypes.FETCH_PKMN_SUCCESS): \r\n            return fetchPkmnSuccess(state, action.pokemons);\r\n        case(actionTypes.CHANGE_GEN):\r\n            return updateState({selectedGen: action.selectedGen})\r\n        case(actionTypes.FETCH_CURRENT_PKMN_SUCCESS):\r\n            return fetchCurrentPkmnSuccess(state, action)\r\n        case(actionTypes.LOADING_POKEMONS):\r\n            return updateState({isLoadingPokemons:true})\r\n        case(actionTypes.LOADING_CURRENT_PKMN):\r\n            return updateState({isLoadingCurrent: true})\r\n        case(actionTypes.FETCH_EVO_CHAIN_SUCCESS):\r\n            return updateState({evolutionChain: action.evolutionChain})\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import { call, put, takeEvery } from 'redux-saga/effects';\r\nimport * as actionTypes from '../actions/actionTypes';\r\nimport axios from 'axios';\r\nimport generations from '../../PokemonGeneration';\r\n/* generations[actions.selectedGen].end */\r\nfunction* startFetchAll(actions){\r\n    try{\r\n        yield put({type: actionTypes.LOADING_POKEMONS })\r\n        const pokemons = yield call(() => axios\r\n            .get(`https://pokeapi.co/api/v2/pokemon/?limit=${generations[actions.selectedGen].end}&offset=${generations[actions.selectedGen].start}`)\r\n            .then(res => res.data)\r\n            .then(data => data.results)\r\n            .catch(err => alert(err))\r\n       );\r\n       \r\n        yield put({type: actionTypes.FETCH_PKMN_SUCCESS, pokemons: pokemons})\r\n    }catch(e) {\r\n        yield put({type: actionTypes.FETCH_PKMN_FAIL, error: e})\r\n    }\r\n}\r\n\r\nfunction* startFetchSelected(actions){\r\n\r\n    try{\r\n\r\n        yield put({ type: actionTypes.LOADING_CURRENT_PKMN })\r\n\r\n        const selectedPokemon = yield call(\r\n            ()=> axios.get('https://pokeapi.co/api/v2/pokemon/'+actions.id)\r\n                .then(res => res.data)\r\n                .then(data => data)\r\n                .catch(err => console.log(err))        \r\n        );\r\n                \r\n        const species = actions.id.replace(/(-[a-z]{3,})?$/,\"\");\r\n\r\n        const pokedexInfo = yield call(\r\n            ()=> axios.get('https://pokeapi.co/api/v2/pokemon-species/'+species)\r\n                .then(res => res.data)\r\n                .then(data => data)\r\n                .catch(err => console.log(err))); \r\n\r\n        yield put({type: actionTypes.FETCH_EVO_CHAIN_START, evoChainURL: pokedexInfo.evolution_chain.url})\r\n\r\n        yield put({\r\n            type: actionTypes.FETCH_CURRENT_PKMN_SUCCESS, \r\n            selectedPokemonId: actions.id,\r\n            selectedPokemon: selectedPokemon,\r\n            pokedexInfo: pokedexInfo,\r\n        });\r\n    }catch(e){\r\n        yield put({type: actionTypes.FETCH_CURRENT_PKMN_FAIL, error: e});\r\n    }\r\n}\r\n\r\nfunction* startFetchEvoChain(actions){\r\n   try{ \r\n        const evoChain = yield call(\r\n        () => axios.get(actions.evoChainURL))\r\n        \r\n        yield put({\r\n        type: actionTypes.FETCH_EVO_CHAIN_SUCCESS,\r\n        evolutionChain: evoChain.data\r\n    })\r\n   }catch(e){\r\n    yield put({\r\n        type: actionTypes.FETCH_EVO_CHAIN_FAIL\r\n    })\r\n   }\r\n} \r\n\r\nfunction* mySaga() {\r\n    yield takeEvery(actionTypes.FETCH_PKMN_START, startFetchAll);\r\n    yield takeEvery(actionTypes.FETCH_CURRENT_PKMN_START, startFetchSelected);\r\n    yield takeEvery(actionTypes.FETCH_EVO_CHAIN_START, startFetchEvoChain)\r\n}\r\n\r\nexport default mySaga;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport './index.css';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport theme from './theme';\r\nimport reducer from './store/reducers/reducer';\r\nimport mySaga from './store/sagas/sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(reducer, applyMiddleware(sagaMiddleware));\r\nsagaMiddleware.run(mySaga);\r\n\r\nReactDOM.render(\r\n    <Provider store={store} >\r\n        <BrowserRouter basename=\"/pokedex/\">\r\n            <ThemeProvider theme={theme}><App /></ThemeProvider> \r\n        </BrowserRouter>\r\n    </Provider>, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}