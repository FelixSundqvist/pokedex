{"version":3,"sources":["components/PokedexInfo/EvolutionChain/EvolutionChain.js"],"names":["EvolutionWrapper","styled","div","_templateObject","EvoItem","span","_templateObject2","EvoMethodDiv","_templateObject3","EvolutionChain","_ref","evoChain","chain","evolutionMethod","_ref2","evolution_details","length","map","cur","id","Object","keys","currentMethod","key","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","method","name","replace","includes","_UI_PkmnIcon_PkmnIcon__WEBPACK_IMPORTED_MODULE_3__","createEvoItems","filter","current","props","reduce","b","concat","createEvolutionElements","species","createEvolutionMethodEl","evolutionBranch","checkEvolution","evolution","arr","arguments","undefined","push","evolves_to","checkEvoChain","currentBranch","Fragment"],"mappings":"ozBAKA,IAAMA,EAAmBC,IAAOC,IAAVC,KAQhBC,EAAUH,IAAOI,KAAVC,KAGPC,EAAeN,IAAOC,IAAVM,KAiGHC,UA9EQ,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SAEtB,GAAGA,EAASC,MAAM,CACd,IA0CMC,EAAkB,SAAAC,GAAyB,IAAvBC,EAAuBD,EAAvBC,kBACtB,GAAgC,IAA7BA,EAAkBC,OAGrB,OAAOD,EAAkBE,IAAI,SAACC,EAAKC,GAAN,OAAaC,OAAOC,KAAKH,GACjDD,IAAI,SAAAK,GAAa,OAjCH,SAACC,EAAKV,EAAiBM,GAE1C,OAAOI,EAAIV,GACTW,EAAAC,EAAAC,cAACtB,EAAD,CAASmB,IAAMV,EAAkBM,EAAKQ,OAAQJ,EAAIV,GAAiBe,MAC7DJ,EAAAC,EAAAC,cAAA,WAAMb,EAAgBgB,QAAQ,KAAM,KAApC,IACKN,EAAIV,GAAiBe,KAAOL,EAAIV,GAAiBe,KAAOL,EAAIV,IAI7DU,EAAIV,IAAoBU,EAAIV,GAAiBe,MAAQf,EAAgBiB,SAAS,QAC5EN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAUH,KAAML,EAAIV,GAAiBe,OACrC,MAGZ,KAmBwBI,CAAed,EAAKI,EAAeH,KACxDc,OAAO,SAAAC,GAAO,OAfI,QAFIrB,EAiBkBqB,MAbpCrB,IAAmBA,EAAgBU,IAAIO,SAAS,YAA+C,aAAjCjB,EAAgBsB,MAAMR,QAJnE,IAACd,MAkB1BuB,OAAO,SAACX,EAAGY,GAAJ,OAAUZ,EAAEa,OAAOD,IAAI,KAG7BE,EAA0B,SAACrB,EAAKC,GAAN,OAC5BK,EAAAC,EAAAC,cAACnB,EAAD,CAAcgB,IAAKL,EAAIsB,QAAQZ,MAC3BJ,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAUH,KAAMV,EAAIsB,QAAQZ,OAC3BV,EAAIsB,QAAQZ,OAIfa,EAA0B,SAACvB,EAAKC,GAAN,OAChCK,EAAAC,EAAAC,cAACnB,EAAD,CAAcgB,IAAKL,EAAMC,GACpBN,EAAgBK,KAGfwB,EA/DiB,SAAjBC,EAAkBC,GAAwB,IAAbC,EAAaC,UAAA9B,OAAA,QAAA+B,IAAAD,UAAA,GAAAA,UAAA,GAAP,GAUrC,OATAD,EAAIG,KAAK,CAACJ,IAFQ,SAAAA,GAAS,OAAIA,EAAUK,YAAcL,EAAUK,WAAWjC,OAAS,EAIlFkC,CAAcN,KACVA,EAAUK,WAAWjC,OAAS,EAC7B6B,EAAIG,KAAKJ,EAAUK,YAEnBL,EAAUK,WAAWhC,IAAI,SAAAC,GAAG,OAAIyB,EAAezB,EAAK2B,MAGrDA,EAqDaF,CAAehC,EAASC,OAAOK,IAAI,SAACkC,EAAehC,GAAhB,OACvDK,EAAAC,EAAAC,cAACF,EAAAC,EAAM2B,SAAP,CAAgB7B,IAAK,SAAUJ,GAC1BA,EAAK,EAAIK,EAAAC,EAAAC,cAAA,WAAMyB,EAAclC,IAAIwB,IAAkC,KACpEjB,EAAAC,EAAAC,cAAA,WAAMyB,EAAclC,IAAIsB,OAGhC,OAAOf,EAAAC,EAAAC,cAAC1B,EAAD,KAAmB0C","file":"static/js/6.c0edf63f.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components';\r\nimport PkmnIcon from '../../UI/PkmnIcon/PkmnIcon';\r\n\r\n\r\nconst EvolutionWrapper = styled.div`\r\ndisplay: flex;\r\noverflow: hidden;\r\nflex-wrap: wrap;\r\nalign-items: center;\r\njustify-content: space-evenly;\r\ncolor: white;\r\n`\r\nconst EvoItem = styled.span`\r\noverflow: hidden;\r\n`\r\nconst EvoMethodDiv = styled.div`   \r\npadding: 8px;\r\nmargin: 8px;\r\nmin-width: 100px;\r\nheight: 100px;\r\nword-wrap: break-word;\r\nfont-size: .4vw;\r\nborder: .1vw solid white;\r\noverflow: auto;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nflex-direction: column;\r\n@media screen and (max-width: 768px){    \r\n    height: 80px;\r\n    font-size: 1vw;\r\n}\r\n`\r\n\r\nconst EvolutionChain = ({ evoChain }) => {\r\n\r\n    if(evoChain.chain){\r\n        const checkEvoChain = evolution => evolution.evolves_to && evolution.evolves_to.length > 0\r\n        const checkEvolution = (evolution, arr = []) => {\r\n            arr.push([evolution]);\r\n    \r\n            if(checkEvoChain(evolution)){\r\n                if(evolution.evolves_to.length > 1){\r\n                    arr.push(evolution.evolves_to) \r\n                }else{\r\n                    evolution.evolves_to.map(cur => checkEvolution(cur, arr))\r\n                }\r\n            }\r\n            return arr\r\n        }\r\n    \r\n        const createEvoItems = (key, evolutionMethod, id) => {\r\n            \r\n            return key[evolutionMethod] \r\n            ? <EvoItem key={ evolutionMethod + id } method={key[evolutionMethod].name}>\r\n                    <div>{evolutionMethod.replace(/_/g, ' ')}: \r\n                        {key[evolutionMethod].name ? key[evolutionMethod].name : key[evolutionMethod]} \r\n                    </div>\r\n                    {\r\n                       \r\n                        key[evolutionMethod] && key[evolutionMethod].name && evolutionMethod.includes(\"item\") \r\n                        ? <PkmnIcon name={key[evolutionMethod].name} />\r\n                        : null\r\n                    }\r\n                </EvoItem>\r\n            : null\r\n        }\r\n    \r\n        const filterEvolutionMethod = (evolutionMethod) => {\r\n            \r\n            if(evolutionMethod === null){\r\n                return false\r\n            }else if(evolutionMethod && evolutionMethod.key.includes(\"trigger\") && evolutionMethod.props.method === \"level-up\"){\r\n                return false;\r\n            }\r\n            else{\r\n                return true;\r\n            }\r\n        }\r\n        const evolutionMethod = ({evolution_details}) => {\r\n            if(evolution_details.length === 0 ){\r\n                return\r\n            }\r\n            return evolution_details.map((cur, id) => Object.keys(cur)\r\n                .map(currentMethod => createEvoItems(cur, currentMethod, id))\r\n                .filter(current => filterEvolutionMethod(current)))\r\n            .reduce((a, b) => a.concat(b), []) // flatten\r\n        };\r\n        \r\n        const createEvolutionElements = (cur, id) => \r\n            <EvoMethodDiv key={cur.species.name} >\r\n                <PkmnIcon name={cur.species.name} />\r\n                {cur.species.name}\r\n            </EvoMethodDiv>\r\n    \r\n\r\n        const createEvolutionMethodEl = (cur, id) => \r\n        <EvoMethodDiv key={cur + id}>\r\n            {evolutionMethod(cur)}\r\n        </EvoMethodDiv>\r\n    \r\n        const evolutionBranch = checkEvolution(evoChain.chain).map((currentBranch, id) => \r\n            <React.Fragment key={\"branch\"+ id}>\r\n                {id > 0 ? <div>{currentBranch.map(createEvolutionMethodEl)}</div> : null}\r\n                <div>{currentBranch.map(createEvolutionElements)}</div>\r\n            </React.Fragment>)\r\n    \r\n        return <EvolutionWrapper>{evolutionBranch}</EvolutionWrapper>\r\n    }\r\n \r\n}   \r\n\r\nexport default EvolutionChain;"],"sourceRoot":""}