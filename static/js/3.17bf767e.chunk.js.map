{"version":3,"sources":["assets/sort-down-solid.svg","assets/minus-solid.svg","components/PokedexInfo/Types/Types.js","components/PokedexInfo/FormButton/FormButton.js","components/PokedexInfo/InfoImage/InfoImage.js","components/PokedexInfo/Abilities/Abilities.js","components/PokedexInfo/EggGroup/EggGroup.js","components/PokedexInfo/Title/Title.js","hoc/showOnClick.js","components/PokedexInfo/PokedexInfo.js","containers/CurrentPokemon/CurrentPokemon.js"],"names":["module","exports","__webpack_require__","p","Types","_ref","type","StyledTypes","styled","span","_templateObject","bgColor","react_default","a","createElement","style","backgroundColor","withTheme","props","FormButton","button","FormButton_templateObject","theme","palette","secondary","children","includes","onClick","name","InfoImage","StyledImage","div","InfoImage_templateObject","concat","imageLink","Buttons","_templateObject2","formes","varieties","length","map","form","PokedexInfo_FormButton_FormButton","key","pokemon","evolutionClick","abilities","AbilityWrapper","Abilities_templateObject","StyledAbilities","Abilities_templateObject2","StyledHiddenAbilities","_templateObject3","allAbilities","Fragment","cur","is_hidden","ability","reverse","EggGroup","Title","StyledTitle","h3","Title_templateObject","ArrowIcon","Title_templateObject2","arrowDown","MinusIcon","Title_templateObject3","minus","show","showOnClick","Component","_useState","useState","_useState2","Object","slicedToArray","setShow","hidden","assign","title","PokedexInfo_Title_Title","Stats","React","lazy","e","then","bind","EvolutionChain","DexEntry","MoveList","PokedexInfo","memo","selectedPokemon","pokedexInfo","evoChain","flavor_text_entries","habitat","base_happiness","capture_rate","egg_groups","moves","height","weight","stats","StyledInfo","PokedexInfo_templateObject","pokemonProperties","pokemonGenus","types","size","captureRate","baseHappiness","description","evolutionChain","eggGroups","filter","language","PokedexInfo_Types_Types","pokemonGenera","genera","checkLetter","genus","PokedexInfo_Abilities_Abilities","flavor_text","roundNum","PokedexInfo_EggGroup_EggGroup","allPkmnProperties","keys","infoImage","PokedexInfo_InfoImage_InfoImage","react","fallback","CurrentPokemon","isLoadingCurrent","match","history","fetchSelectedPokemon","fetchCurrentPokemonError","fetch","useCallback","params","id","useEffect","Loading","ErrorHandler","error1","PokedexInfo_PokedexInfo","push","Wrapper","scanner","connect","state","selectedPokemonId","dispatch","actionTypes"],"mappings":"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","file":"static/js/3.17bf767e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sort-down-solid.cc204b0f.svg\";","module.exports = __webpack_public_path__ + \"static/media/minus-solid.af448422.svg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Types = ({ type }) => {\r\n    const StyledTypes = styled.span`\r\n        padding: 8px;\r\n        border: 2px solid black;\r\n        border-radius: 1vw;\r\n        width: 25px;\r\n        height: 10px;\r\n        margin: 8px;\r\n        color: white;\r\n        text-transform: uppercase;\r\n        font-family: sans-serif;\r\n    `\r\n    let bgColor = \"#BFBCB6\";\r\n    switch(type){\r\n        case(\"bug\"): \r\n            bgColor = \"#9EAC24\";\r\n        break;\r\n        case(\"dark\"):\r\n            bgColor = \"#2A241F\";\r\n        break;\r\n        case(\"dragon\"):\r\n            bgColor = \"#6C5CBA\";\r\n        break;  \r\n        case(\"electric\"):\r\n            bgColor = \"#E19E1E\";\r\n        break;\r\n        case(\"fairy\"):\r\n            bgColor = \"#EDA7EF\";\r\n        break;\r\n        case(\"fighting\"):\r\n            bgColor =\"#603228\";\r\n        break;\r\n        case(\"fire\"):\r\n            bgColor = \"#CE340C\";\r\n        break;\r\n        case(\"flying\"):\r\n            bgColor = \"#6879CF\";\r\n        break;\r\n        case(\"ghost\"):\r\n            bgColor = \"#444364\";\r\n        break;\r\n        case(\"grass\"):\r\n            bgColor = \"#467127\";\r\n        break;\r\n        case(\"ground\"):\r\n            bgColor = \"#937D52\";\r\n        break;\r\n        case(\"ice\"):\r\n            bgColor = \"#72D6EF\";\r\n        break;\r\n        case(\"normal\"):\r\n            bgColor = \"#BFBCB6\";\r\n        break;\r\n        case(\"poison\"):\r\n            bgColor = \"#884D88\";\r\n        break;\r\n        case(\"psychic\"):\r\n            bgColor = \"#D84C7B\";\r\n        break;\r\n        case(\"rock\"):\r\n            bgColor = \"#998444\";\r\n        break;\r\n        case(\"steel\"):\r\n            bgColor = \"#827F8C\";\r\n        break;\r\n        case(\"water\"):\r\n            bgColor = \"#3C8FDC\";\r\n        break;\r\n        default:\r\n            bgColor = \"white\";\r\n    }\r\n    return(<StyledTypes style={{backgroundColor: bgColor}}>{type}</StyledTypes>)\r\n}\r\n\r\nexport default Types;","import React from 'react';\r\nimport styled, { withTheme } from 'styled-components';\r\n\r\nconst FormButton = props => {\r\n    \r\n    const FormButton = styled.button`\r\n        margin: 4px;\r\n        flex: 1;\r\n        background-color: ${props.theme.palette.secondary};\r\n        color: white;\r\n        border: none;\r\n        text-transform: capitalize;\r\n\r\n        transition: 100ms ease-in;\r\n        &:hover{\r\n            background-color: blue;\r\n            cursor: pointer;\r\n        }\r\n    `\r\n    /*\r\n    TODO: add  UsUm models*/\r\n    \r\n    return !props.children.includes(\"totem\") ? <FormButton onClick={() => props.onClick(props.name)}>{props.children}</FormButton> : null;\r\n}\r\n\r\nexport default withTheme(FormButton)","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport FormButton from '../FormButton/FormButton';\r\n\r\nconst InfoImage = props => {\r\n    const StyledImage = styled.div`\r\n        height: 150px;\r\n        background-image: ${`url(${props.imageLink})`};\r\n        background-repeat: no-repeat;\r\n        background-size: contain;\r\n        background-position: 50% 50%;\r\n        margin: 16px 0;\r\n    `\r\n    const Buttons = styled.div`\r\n        float: right;\r\n        color: black;\r\n        width: 20%;\r\n        height: 100%;\r\n        display: flex;\r\n        flex-direction: column;\r\n        border: 2px solid white;\r\n        color: white;\r\n    `\r\n\r\n    const formes = props.varieties && props.varieties.length > 1 \r\n    ?   (<Buttons>\r\n        {\r\n        props.varieties.map(form => \r\n            <FormButton \r\n                key={form.pokemon.name}\r\n                onClick={props.evolutionClick}\r\n                name={form.pokemon.name}\r\n                >\r\n                {form.pokemon.name}\r\n            </FormButton>)\r\n        }\r\n        </Buttons>)\r\n    :  null;\r\n    return (<StyledImage name={props.imageLink}>{formes}</StyledImage>)\r\n\r\n}\r\n\r\nexport default InfoImage;","import React from 'react';\r\nimport styled, { withTheme } from 'styled-components';\r\n\r\nconst Abilities = ({ abilities, theme }) => {\r\n    \r\n    const AbilityWrapper = styled.div`\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n    `\r\n\r\n    const StyledAbilities = styled.div`\r\n        padding: 16px;\r\n        background-color: ${theme.palette.secondary};\r\n        margin: 8px;\r\n       \r\n    `\r\n\r\n    const StyledHiddenAbilities = styled.div`\r\n        padding: 16px;\r\n        background-color: ${theme.palette.secondary};\r\n        opacity: 0.3;\r\n        margin: 8px;`\r\n    \r\n    const allAbilities = (\r\n    <React.Fragment key=\"abilities\">\r\n        {abilities.map(cur => !cur.is_hidden \r\n            ? <StyledAbilities key={cur.ability.name}>{cur.ability.name}</StyledAbilities> \r\n            :<React.Fragment key={cur.ability.name}>\r\n                <p>Hidden: </p>\r\n                <StyledHiddenAbilities>{cur.ability.name}</StyledHiddenAbilities>\r\n            </React.Fragment>\r\n        ).reverse()} \r\n    </React.Fragment>)\r\n\r\n    return (\r\n        <>\r\n            <h3>Abilities</h3>\r\n            <AbilityWrapper>{allAbilities}</AbilityWrapper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withTheme(Abilities);","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst EggGroup = (props) => {\r\n\r\n    return <div key=\"egg\">\r\n    {props.children}\r\n    </div>\r\n}\r\n\r\nexport default EggGroup;","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport arrowDown from '../../../assets/sort-down-solid.svg';\r\nimport minus from '../../../assets/minus-solid.svg';\r\n\r\nconst Title = props => {\r\n    \r\n    const StyledTitle = styled.h3`\r\n        position: relative;\r\n        border: 2px solid white;\r\n\r\n        &:hover {\r\n            cursor: pointer;\r\n        }\r\n\r\n    `\r\n    const ArrowIcon = styled.div`\r\n        display: block;\r\n        position: absolute;\r\n        top: -70%;\r\n        right: 0;\r\n        height: 100%;\r\n        width: 5%;\r\n        transform: translate(-50%, 50%);\r\n        background-image: url(${arrowDown});\r\n        background-repeat: no-repeat;\r\n        background-size: contain;\r\n        background-position: 50% 50%;\r\n    `\r\n    const MinusIcon = styled.div`\r\n        display: block;\r\n        position: absolute;\r\n        top: -50%;\r\n        right: 0;\r\n        height: 100%;\r\n        width: 5%;\r\n        transform: translate(-50%, 50%);\r\n        background-image: url(${minus});\r\n        background-repeat: no-repeat;\r\n        background-size: contain;\r\n        background-position: 50% 50%;\r\n    `\r\n    \r\n    return (\r\n        <StyledTitle onClick={props.onClick}>\r\n            {props.children}\r\n            {!props.show ? <ArrowIcon /> : <MinusIcon />}\r\n        </StyledTitle>)\r\n}\r\n\r\nexport default Title;","import React, { useState } from 'react';\r\nimport Title from '../components/PokedexInfo/Title/Title';\r\n\r\n\r\nconst showOnClick = Component => props =>{\r\n    const [show, setShow] = useState(false);\r\n    const hidden = show ? <Component {...props} show={show} /> : null\r\n\r\n    return (\r\n    <div key={props.title}>\r\n        <Title onClick={() => setShow(!show)} show={show}>{props.title}</Title>\r\n        {hidden}\r\n    </div>)\r\n}\r\n\r\nexport default showOnClick","import React, { Suspense } from 'react';\r\nimport styled, { withTheme } from 'styled-components';\r\nimport Types from './Types/Types';\r\nimport InfoImage from './InfoImage/InfoImage';\r\n\r\nimport { roundNum, checkLetter } from '../../utility';\r\nimport Abilities from './Abilities/Abilities';\r\n\r\nimport EggGroup from './EggGroup/EggGroup';\r\nimport showOnClick from '../../hoc/showOnClick';\r\n\r\nconst Stats = React.lazy(() => import('./Stats/Stats')) \r\nconst EvolutionChain = React.lazy(() =>  import('./EvolutionChain/EvolutionChain'));\r\nconst DexEntry = React.lazy(() => import('./DexEntry/DexEntry'));\r\nconst MoveList = React.lazy(() => import('./Moves/MoveList'));\r\n\r\nconst PokedexInfo = React.memo(props => {\r\n    \r\n    const {selectedPokemon, pokedexInfo, evoChain, evolutionClick} = props;\r\n    \r\n    if(selectedPokemon && pokedexInfo && evoChain){\r\n        const { flavor_text_entries, varieties, habitat, base_happiness, capture_rate, egg_groups } = pokedexInfo;\r\n        const { moves, height, weight, abilities, stats } = selectedPokemon;\r\n    \r\n        const imageLink = `http://felixsundqvist.org/pokemon/${selectedPokemon.name}.gif`\r\n\r\n        const StyledInfo = styled.div`\r\n            min-height: 100%;\r\n            width: 100%;\r\n            color: white;\r\n            text-transform: capitalize;\r\n        `\r\n    \r\n        const pokemonProperties = {\r\n            pokemonGenus: null,\r\n            types: null,\r\n            size: null,\r\n            captureRate: null,\r\n            baseHappiness: null,\r\n            habitat: null,\r\n            abilities: null,\r\n            description: null,\r\n            stats: null,\r\n            evolutionChain: null,\r\n            eggGroups: null,\r\n            moves: null,\r\n        }\r\n        \r\n        //DESCRIPTION\r\n        const description = flavor_text_entries \r\n        ? flavor_text_entries.filter(cur => cur.language.name === \"en\")[0] \r\n        : null;\r\n    \r\n        //TYPES\r\n        pokemonProperties.types = selectedPokemon.types \r\n        ? <div key=\"types\">{selectedPokemon.types.map(cur => <Types key={cur.type.name} type={cur.type.name} />)}</div> \r\n        : null;\r\n    \r\n        //GENERA\r\n        const pokemonGenera = pokedexInfo.genera \r\n        ? pokedexInfo.genera.filter(cur => cur.language.name === \"en\")[0] : null;\r\n        pokemonProperties.pokemonGenus = pokemonGenera \r\n        ? <h3 key=\"genus\">{checkLetter(pokemonGenera.genus)}</h3> \r\n        : null;\r\n\r\n        //ABILITIES\r\n        pokemonProperties.abilities = abilities \r\n        ? <Abilities key=\"abilities\" abilities={abilities} />\r\n        : null;\r\n        \r\n        //pokemon dex entry\r\n        pokemonProperties.description = description \r\n        ?   \r\n            <React.Fragment key=\"description\">\r\n                <h3>Dex Entry</h3>\r\n                <DexEntry>\r\n                    <p>{description.flavor_text}</p>\r\n                </DexEntry>\r\n            </React.Fragment>    \r\n        :   <div key=\"loading\">LOADING</div>;\r\n    \r\n        //size\r\n        pokemonProperties.size = height && weight\r\n        ? \r\n            <p key=\"size\">\r\n                {`Height: ${roundNum(height, 0.1)} m`} \r\n                <br />\r\n                {`Weight: ${roundNum(weight, 0.1)} kg`}\r\n            </p>\r\n        : null;\r\n\r\n        //evolution chain, stats, moves\r\n        pokemonProperties.evolutionChain = evoChain \r\n            ? showOnClick(EvolutionChain)({key: \"evo chain\", evoChain: evoChain, title: \"Evolution Chain\"}) \r\n            : null;\r\n        pokemonProperties.stats = stats \r\n            ? showOnClick(Stats)({key:\"stats\", stats:stats, title: \"Stats\"}) \r\n            : null;\r\n        pokemonProperties.moves = moves \r\n            ? showOnClick(MoveList)({key: \"moves\", moves: moves, title: \"Move List\"})\r\n            :null;\r\n            \r\n        // habitat, capture rate, happiness\r\n        pokemonProperties.habitat = habitat ? <p key=\"habitat\"> Habitat: { habitat.name }</p> : null;\r\n        pokemonProperties.baseHappiness = base_happiness ? <p key=\"happiness\" >Base Happiness : {base_happiness}</p> : null;\r\n        pokemonProperties.captureRate = capture_rate ? <p key=\"capture\">Capture Rate: {capture_rate} </p> : null;\r\n\r\n        pokemonProperties.eggGroups = egg_groups ? <EggGroup eggGroups = {egg_groups}  /> : null;\r\n\r\n        //Map through all pkmnProperties and render\r\n        const allPkmnProperties = Object.keys(pokemonProperties).map(cur => pokemonProperties[cur]);\r\n    \r\n        //image gif\r\n        const infoImage =  imageLink !== \"http://felixsundqvist.org/pokemon/undefined.gif\" \r\n            ? <InfoImage imageLink={imageLink} varieties={varieties} evolutionClick={evolutionClick} /> \r\n            : null;\r\n        \r\n        \r\n    \r\n        return(\r\n            <StyledInfo>\r\n                <Suspense fallback={<p>LOADING</p>}>\r\n                    {infoImage}\r\n                </Suspense>\r\n               \r\n                <h2>{selectedPokemon.name}</h2>\r\n                {allPkmnProperties}\r\n                \r\n               {/*  <Button>Add To Team</Button> */}\r\n            </StyledInfo>\r\n        )\r\n    }\r\n\r\n})\r\n\r\nexport default withTheme(PokedexInfo);","import React, { useEffect, useCallback } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PokedexInfo from '../../components/PokedexInfo/PokedexInfo';\r\nimport Loading from '../../components/UI/Loading/Loading';\r\n\r\nimport * as actionTypes from '../../store/actions/actionTypes';\r\nimport Wrapper from '../../components/Wrapper/Wrapper';\r\nimport ErrorHandler from '../../components/UI/ErrorHandler/ErrorHandler';\r\n\r\nconst CurrentPokemon = React.memo((\r\n    {\r\n        selectedPokemon, \r\n        pokedexInfo,\r\n        isLoadingCurrent,\r\n        match,\r\n        history,\r\n        fetchSelectedPokemon,\r\n        evoChain,\r\n        fetchCurrentPokemonError\r\n    }) => {\r\n\r\n    const fetch = useCallback(\r\n        () => {\r\n            fetchSelectedPokemon(match.params.id);\r\n        },[match.params.id, fetchSelectedPokemon]\r\n    )\r\n    \r\n    useEffect(() => { fetch() }, [fetch])\r\n\r\n    let pokemon = <Loading />\r\n    if(!isLoadingCurrent && !fetchCurrentPokemonError){\r\n        pokemon = <PokedexInfo \r\n        pokedexInfo={pokedexInfo} \r\n        selectedPokemon={selectedPokemon}\r\n        evoChain={evoChain}\r\n        evolutionClick={(id) => history.push(\"/id=\"+id)}\r\n         /> \r\n    }else if(fetchCurrentPokemonError){\r\n        pokemon = <ErrorHandler error1 />\r\n    }             \r\n    \r\n    return (\r\n        <Wrapper scanner>\r\n            {pokemon}\r\n        </Wrapper>\r\n    )\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n    selectedPokemonId: state.selectedPokemonId,\r\n    selectedPokemon: state.selectedPokemon,\r\n    pokedexInfo: state.pokedexInfo,\r\n    isLoadingCurrent: state.isLoadingCurrent,\r\n    evoChain: state.evolutionChain,\r\n    fetchCurrentPokemonError: state.fetchCurrentPokemonError\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchSelectedPokemon: (id) => dispatch({type: actionTypes.FETCH_CURRENT_PKMN_START, id: id}),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrentPokemon);"],"sourceRoot":""}