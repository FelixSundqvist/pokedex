{"version":3,"sources":["components/PokedexInfo/Types/Types.js","components/PokedexInfo/FormButton/FormButton.js","components/PokedexInfo/InfoImage/InfoImage.js","components/PokedexInfo/Abilities/Abilities.js","components/PokedexInfo/Title/Title.js","hoc/showOnClick.js","components/PokedexInfo/PokedexInfo.js","containers/AddToTeamForm/natures/natures.js","containers/AddToTeamForm/AddToTeamForm.js","containers/CurrentPokemon/CurrentPokemon.js","assets/sort-down-solid.svg","assets/minus-solid.svg"],"names":["Types","_ref","type","StyledTypes","styled","span","_templateObject","bgColor","react_default","a","createElement","style","backgroundColor","withTheme","props","FormButton","button","FormButton_templateObject","theme","palette","secondary","children","includes","onClick","name","InfoImage","StyledImage","div","InfoImage_templateObject","concat","imageLink","Buttons","_templateObject2","formes","varieties","length","map","form","PokedexInfo_FormButton_FormButton","key","pokemon","evolutionClick","abilities","AbilityWrapper","Abilities_templateObject","StyledAbilities","Abilities_templateObject2","StyledHiddenAbilities","_templateObject3","allAbilities","cur","is_hidden","Fragment","ability","reverse","Title","StyledTitle","h3","Title_templateObject","ArrowIcon","Title_templateObject2","arrowDown","MinusIcon","Title_templateObject3","minus","show","showOnClick","Component","_useState","useState","_useState2","Object","slicedToArray","setShow","hidden","assign","title","PokedexInfo_Title_Title","Stats","React","lazy","__webpack_require__","e","then","bind","EvolutionChain","DexEntry","MoveList","EggGroup","PokedexInfo","memo","selectedPokemon","pokedexInfo","evoChain","addToTeam","flavor_text_entries","habitat","base_happiness","capture_rate","egg_groups","moves","height","weight","stats","StyledInfo","PokedexInfo_templateObject","pokemonProperties","pokemonGenus","types","size","captureRate","baseHappiness","description","evolutionChain","eggGroups","filter","language","PokedexInfo_Types_Types","pokemonGenera","genera","checkLetter","genus","PokedexInfo_Abilities_Abilities","flavor_text","roundNum","allPkmnProperties","keys","infoImage","PokedexInfo_InfoImage_InfoImage","react","fallback","Button","objectSpread","natures","inc","dec","Form","AddToTeamForm_templateObject","ItemWrapper","AddToTeamForm_templateObject2","StatsWrapper","AddToTeamForm_templateObject3","Move","_templateObject4","TypeWrapper","_templateObject5","Warning","_templateObject6","connect","dispatch","addPokemon","actionTypes","setPkmn","move","pokemonMoves","setPokemonMoves","_useState3","_useState4","pokeAbility","setPokeAbility","_useState5","_useState6","selectedNature","setSelectedNature","_useState7","_useState8","warning","setWarning","useEffect","setValue","func","preventDefault","target","value","stat","base_stat","Array","from","id","onChange","pokemonMoveCopy","toConsumableArray","c","index","some","changeMove","natureOptions","Modal","PkmnIcon","nature","submit","Backdrop","CurrentPokemon","isLoadingCurrent","match","history","fetchSelectedPokemon","fetchCurrentPokemonError","currentPkmn","fetch","useCallback","params","Loading","ErrorHandler","error1","PokedexInfo_PokedexInfo","containers_AddToTeamForm_AddToTeamForm","push","Wrapper","scanner","state","selectedPokemonId","module","exports","p"],"mappings":"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","file":"static/js/3.ad53556b.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Types = ({ type }) => {\r\n    const StyledTypes = styled.span`\r\n        padding: 8px;\r\n        border: 2px solid black;\r\n        border-radius: 1vw;\r\n        width: 25px;\r\n        height: 10px;\r\n        margin: 8px;\r\n        color: white;\r\n        text-transform: uppercase;\r\n        font-family: sans-serif;\r\n    `\r\n    let bgColor = \"#BFBCB6\";\r\n    switch(type){\r\n        case(\"bug\"): \r\n            bgColor = \"#9EAC24\";\r\n        break;\r\n        case(\"dark\"):\r\n            bgColor = \"#2A241F\";\r\n        break;\r\n        case(\"dragon\"):\r\n            bgColor = \"#6C5CBA\";\r\n        break;  \r\n        case(\"electric\"):\r\n            bgColor = \"#E19E1E\";\r\n        break;\r\n        case(\"fairy\"):\r\n            bgColor = \"#EDA7EF\";\r\n        break;\r\n        case(\"fighting\"):\r\n            bgColor =\"#603228\";\r\n        break;\r\n        case(\"fire\"):\r\n            bgColor = \"#CE340C\";\r\n        break;\r\n        case(\"flying\"):\r\n            bgColor = \"#6879CF\";\r\n        break;\r\n        case(\"ghost\"):\r\n            bgColor = \"#444364\";\r\n        break;\r\n        case(\"grass\"):\r\n            bgColor = \"#467127\";\r\n        break;\r\n        case(\"ground\"):\r\n            bgColor = \"#937D52\";\r\n        break;\r\n        case(\"ice\"):\r\n            bgColor = \"#72D6EF\";\r\n        break;\r\n        case(\"normal\"):\r\n            bgColor = \"#BFBCB6\";\r\n        break;\r\n        case(\"poison\"):\r\n            bgColor = \"#884D88\";\r\n        break;\r\n        case(\"psychic\"):\r\n            bgColor = \"#D84C7B\";\r\n        break;\r\n        case(\"rock\"):\r\n            bgColor = \"#998444\";\r\n        break;\r\n        case(\"steel\"):\r\n            bgColor = \"#827F8C\";\r\n        break;\r\n        case(\"water\"):\r\n            bgColor = \"#3C8FDC\";\r\n        break;\r\n        default:\r\n            bgColor = \"white\";\r\n    }\r\n    return(<StyledTypes style={{backgroundColor: bgColor}}>{type}</StyledTypes>)\r\n}\r\n\r\nexport default Types;","import React from 'react';\r\nimport styled, { withTheme } from 'styled-components';\r\n\r\nconst FormButton = props => {\r\n    \r\n    const FormButton = styled.button`\r\n        margin: 4px;\r\n        flex: 1;\r\n        background-color: ${props.theme.palette.secondary};\r\n        color: white;\r\n        border: none;\r\n        text-transform: capitalize;\r\n\r\n        transition: 100ms ease-in;\r\n        &:hover{\r\n            background-color: blue;\r\n            cursor: pointer;\r\n        }\r\n    `\r\n    /*\r\n    TODO: add  UsUm models*/\r\n    \r\n    return !props.children.includes(\"totem\") ? <FormButton onClick={() => props.onClick(props.name)}>{props.children}</FormButton> : null;\r\n}\r\n\r\nexport default withTheme(FormButton)","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport FormButton from '../FormButton/FormButton';\r\n\r\nconst InfoImage = props => {\r\n    const StyledImage = styled.div`\r\n        height: 150px;\r\n        background-image: ${`url(${props.imageLink})`};\r\n        background-repeat: no-repeat;\r\n        background-size: contain;\r\n        background-position: 50% 50%;\r\n        margin: 16px 0;\r\n    `\r\n    const Buttons = styled.div`\r\n        float: right;\r\n        color: black;\r\n        width: 20%;\r\n        height: 100%;\r\n        display: flex;\r\n        flex-direction: column;\r\n        border: 2px solid white;\r\n        color: white;\r\n    `\r\n\r\n    const formes = props.varieties && props.varieties.length > 1 \r\n    ?   (<Buttons>\r\n        {\r\n        props.varieties.map(form => \r\n            <FormButton \r\n                key={form.pokemon.name}\r\n                onClick={props.evolutionClick}\r\n                name={form.pokemon.name}\r\n                >\r\n                {form.pokemon.name}\r\n            </FormButton>)\r\n        }\r\n        </Buttons>)\r\n    :  null;\r\n    return (<StyledImage name={props.imageLink}>{formes}</StyledImage>)\r\n\r\n}\r\n\r\nexport default InfoImage;","import React from 'react';\r\nimport styled, { withTheme } from 'styled-components';\r\n\r\nconst Abilities = ({ abilities, theme }) => {\r\n    \r\n    const AbilityWrapper = styled.div`\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n    `\r\n    const StyledAbilities = styled.div`\r\n        padding: 16px;\r\n        background-color: ${theme.palette.secondary};\r\n        margin: 8px;\r\n    `\r\n    \r\n    const StyledHiddenAbilities = styled.div`\r\n        padding: 16px;\r\n        background-color: ${theme.palette.secondary};\r\n        opacity: 0.3;\r\n        margin: 8px;\r\n    `\r\n\r\n    const allAbilities = abilities\r\n        .map(cur => !cur.is_hidden \r\n            ? <StyledAbilities key={cur.ability.name}>{cur.ability.name}</StyledAbilities> \r\n            :<React.Fragment key={cur.ability.name}>\r\n                <p>Hidden: </p>\r\n                <StyledHiddenAbilities>{cur.ability.name}</StyledHiddenAbilities>\r\n            </React.Fragment>)\r\n        .reverse()\r\n\r\n    return (\r\n        <>\r\n            <h3>Abilities</h3>\r\n            <AbilityWrapper>{allAbilities}</AbilityWrapper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withTheme(Abilities);","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport arrowDown from '../../../assets/sort-down-solid.svg';\r\nimport minus from '../../../assets/minus-solid.svg';\r\n\r\nconst Title = props => {\r\n    \r\n    const StyledTitle = styled.h3`\r\n        position: relative;\r\n        border: 2px solid white;\r\n\r\n        &:hover {\r\n            cursor: pointer;\r\n        }\r\n\r\n    `\r\n    const ArrowIcon = styled.div`\r\n        display: block;\r\n        position: absolute;\r\n        top: -70%;\r\n        right: 0;\r\n        height: 100%;\r\n        width: 5%;\r\n        transform: translate(-50%, 50%);\r\n        background-image: url(${arrowDown});\r\n        background-repeat: no-repeat;\r\n        background-size: contain;\r\n        background-position: 50% 50%;\r\n    `\r\n    const MinusIcon = styled.div`\r\n        display: block;\r\n        position: absolute;\r\n        top: -50%;\r\n        right: 0;\r\n        height: 100%;\r\n        width: 5%;\r\n        transform: translate(-50%, 50%);\r\n        background-image: url(${minus});\r\n        background-repeat: no-repeat;\r\n        background-size: contain;\r\n        background-position: 50% 50%;\r\n    `\r\n    \r\n    return (\r\n        <StyledTitle onClick={props.onClick}>\r\n            {props.children}\r\n            {!props.show ? <ArrowIcon /> : <MinusIcon />}\r\n        </StyledTitle>)\r\n}\r\n\r\nexport default Title;","import React, { useState } from 'react';\r\nimport Title from '../components/PokedexInfo/Title/Title';\r\n\r\n\r\nconst showOnClick = Component => props =>{\r\n    const [show, setShow] = useState(false);\r\n    const hidden = show ? <Component {...props} show={show} /> : null\r\n\r\n    return (\r\n    <div key={props.title}>\r\n        <Title onClick={() => setShow(!show)} show={show}>{props.title}</Title>\r\n        {hidden}\r\n    </div>)\r\n}\r\n\r\nexport default showOnClick","import React, { Suspense } from 'react';\r\nimport styled, { withTheme } from 'styled-components';\r\nimport Types from './Types/Types';\r\nimport InfoImage from './InfoImage/InfoImage';\r\nimport Button from '../UI/Button/Button';\r\nimport { roundNum, checkLetter } from '../../utility';\r\nimport Abilities from './Abilities/Abilities';\r\nimport showOnClick from '../../hoc/showOnClick';\r\n\r\nconst Stats = React.lazy(() => import('./Stats/Stats')) \r\nconst EvolutionChain = React.lazy(() =>  import('./EvolutionChain/EvolutionChain'));\r\nconst DexEntry = React.lazy(() => import('./DexEntry/DexEntry'));\r\nconst MoveList = React.lazy(() => import('./Moves/MoveList'));\r\nconst EggGroup = React.lazy(() => import('./EggGroup/EggGroup'));\r\n\r\nconst PokedexInfo = React.memo(props => {\r\n    \r\n    const {selectedPokemon, pokedexInfo, evoChain, evolutionClick, addToTeam } = props;\r\n    \r\n    if(selectedPokemon && pokedexInfo && evoChain){\r\n        const { flavor_text_entries, varieties, habitat, base_happiness, capture_rate, egg_groups } = pokedexInfo;\r\n        const { moves, height, weight, abilities, stats } = selectedPokemon;\r\n    \r\n        \r\n        const imageLink = `http://felixsundqvist.org/pokemon/${selectedPokemon.name}.gif`\r\n\r\n        const StyledInfo = styled.div`\r\n            min-height: 100%;\r\n            width: 100%;\r\n            color: white;\r\n            text-transform: capitalize;\r\n        `\r\n    \r\n        const pokemonProperties = {\r\n            pokemonGenus: null,\r\n            types: null,\r\n            size: null,\r\n            captureRate: null,\r\n            baseHappiness: null,\r\n            habitat: null,\r\n            abilities: null,\r\n            description: null,\r\n            stats: null,\r\n            evolutionChain: null,\r\n            eggGroups: null,\r\n            moves: null,\r\n        }\r\n        \r\n        //DESCRIPTION\r\n        const description = flavor_text_entries \r\n        ? flavor_text_entries.filter(cur => cur.language.name === \"en\")[0] \r\n        : null;\r\n    \r\n        //TYPES\r\n        pokemonProperties.types = selectedPokemon.types \r\n        ? <div key=\"types\">{selectedPokemon.types.map(cur => <Types key={cur.type.name} type={cur.type.name} />).reverse()}</div> \r\n        : null;\r\n    \r\n        //GENERA\r\n        const pokemonGenera = pokedexInfo.genera \r\n        ? pokedexInfo.genera.filter(cur => cur.language.name === \"en\")[0] : null;\r\n        pokemonProperties.pokemonGenus = pokemonGenera \r\n        ? <h3 key=\"genus\">{checkLetter(pokemonGenera.genus)}</h3> \r\n        : null;\r\n\r\n        //ABILITIES\r\n        pokemonProperties.abilities = abilities \r\n        ? <Abilities key=\"abilities\" abilities={abilities}/>\r\n        : null;\r\n        \r\n        //pokemon dex entry\r\n        pokemonProperties.description = description \r\n        ?   \r\n            <React.Fragment key=\"description\">\r\n                <h3>Dex Entry</h3>\r\n                <DexEntry>\r\n                    <p>{description.flavor_text}</p>\r\n                </DexEntry>\r\n            </React.Fragment>    \r\n        :   <div key=\"loading\">LOADING</div>;\r\n    \r\n        //size\r\n        pokemonProperties.size = height && weight\r\n        ? \r\n            <p key=\"size\">\r\n                {`Height: ${roundNum(height, 0.1)} m`} \r\n                <br />\r\n                {`Weight: ${roundNum(weight, 0.1)} kg`}\r\n            </p>\r\n        : null;\r\n\r\n        //evolution chain, stats, moves\r\n        pokemonProperties.evolutionChain = evoChain \r\n            ? showOnClick(EvolutionChain)({evoChain: evoChain, title: \"Evolution Chain\"}) \r\n            : null;\r\n        pokemonProperties.stats = stats \r\n            ? showOnClick(Stats)({stats:stats, title: \"Stats\"}) \r\n            : null;\r\n        pokemonProperties.moves = moves \r\n            ? showOnClick(MoveList)({moves: moves, title: \"Move List\"})\r\n            :null;\r\n        pokemonProperties.eggGroups = egg_groups ? showOnClick(EggGroup)({title:\"Egg Group\", eggGroups:egg_groups}) : null;    \r\n        \r\n        // habitat, capture rate, happiness\r\n        pokemonProperties.habitat = habitat ? <p key=\"habitat\"> Habitat: { habitat.name }</p> : null;\r\n        pokemonProperties.baseHappiness = base_happiness ? <p key=\"happiness\" >Base Happiness : {base_happiness}</p> : null;\r\n        pokemonProperties.captureRate = capture_rate ? <p key=\"capture\">Capture Rate: {capture_rate} </p> : null;\r\n\r\n        //Map through all pkmnProperties and render\r\n        const allPkmnProperties = Object.keys(pokemonProperties).map(cur => pokemonProperties[cur]);\r\n    \r\n        //image gif\r\n        const infoImage =  imageLink !== \"http://felixsundqvist.org/pokemon/undefined.gif\" \r\n            ? <InfoImage imageLink={imageLink} varieties={varieties} evolutionClick={evolutionClick} /> \r\n            : null;\r\n        return(\r\n            <StyledInfo>\r\n                <Suspense fallback={<p>LOADING</p>}>\r\n                    {infoImage}\r\n                </Suspense>\r\n               \r\n                <h2>{selectedPokemon.name}</h2>\r\n                {allPkmnProperties}\r\n                \r\n                <Button onClick={() => addToTeam({...selectedPokemon,...pokedexInfo, name: selectedPokemon.name})}>Add To Team</Button>\r\n            </StyledInfo>\r\n        )\r\n    }\r\n\r\n})\r\n\r\nexport default withTheme(PokedexInfo);","export const natures = [\r\n    {name: \"Adamant\", inc: \"Attack\", dec: \"Sp. Atk\"},\r\n    {name: \"Bashful\", inc: \"none\", dec: \"none\"},\r\n    {name: \"Bold\", inc: \"Defense\", dec: \"Attack\"},\r\n    {name: \"Brave\", inc: \"Attack\", dec: \"Speed\"},\r\n    {name: \"Calm\", inc: \"Sp. Atk\", dec: \"Attack\"},\r\n    {name: \"Careful\", inc: \"Sp. Def\", dec: \"Sp. Atk\"},\r\n    {name: \"Docile\", inc: \"none\", dec: \"none\"},\r\n    {name: \"Gentle\", inc: \"Sp. Def\", dec: \"Defense\"},\r\n    {name: \"Hardy\", inc: \"none\", dec: \"none\"},\r\n    {name: \"Hasty\", inc: \"Speed\", dec: \"Defense\"},\r\n    {name: \"Impish\", inc: \"Defense\", dec: \"Sp. Atk\"},\r\n    {name: \"Jolly\", inc: \"Speed\", dec: \"Sp. Atk\"},\r\n    {name: \"Lax\", inc: \"Defense\", dec: \"Sp. Def\"},\r\n    {name: \"Lonley\", inc: \"Attack\", dec: \"Defense\"},\r\n    {name: \"Mild\", inc: \"Sp. Atk\", dec: \"Defense\"},\r\n    {name: \"Modest\", inc: \"Sp. Atk\", dec: \"Attack\"},\r\n    {name: \"Naive\", inc: \"Speed\", dec: \"Sp. Def\"},\r\n    {name: \"Naughty\", inc: \"Attack\", dec: \"Sp. Def\"},\r\n    {name: \"Quiet\", inc: \"Sp. Atk\", dec: \"Speed\"},\r\n    {name: \"Quirky\", inc: \"none\", dec: \"none\"},\r\n    {name: \"Rash\", inc: \"Sp. Atk\", dec: \"Sp. Def\"},\r\n    {name: \"Relaxed\", inc: \"Defense\", dec: \"Speed\"},\r\n    {name: \"Sassy\", inc: \"Sp. Def\", dec: \"Speed\"},\r\n    {name: \"Serious\", inc: \"none\", dec: \"none\"},\r\n    {name: \"Timid\", inc: \"Speed\", dec: \"Attack\"},\r\n]","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled, { withTheme } from 'styled-components';\r\n\r\nimport * as actionTypes from '../../store/actions/actionTypes';\r\nimport Types from '../../components/PokedexInfo/Types/Types';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Backdrop from '../../components/UI/Modal/Backdrop';\r\nimport { natures } from './natures/natures';\r\nimport PkmnIcon from '../../components/UI/PkmnIcon/PkmnIcon';\r\n\r\nconst Form = styled.form`\r\nheight: 100%;\r\nwidth: 100%;\r\nmargin: 16px;\r\n`\r\nconst ItemWrapper = styled.div`\r\nwidth: 90%;\r\nheight: auto;\r\npadding: 16px;\r\nmargin: 16px auto;\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\nflex-wrap: wrap;\r\nbox-shadow: 2px 2px 4px 2px #ccc;\r\n`\r\nconst StatsWrapper = styled.div`\r\nwidth: 90%;\r\nmargin: 0 auto;\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\njustify-content: center;\r\nbox-shadow: 2px 2px 4px 2px #ccc;\r\n`\r\n\r\nconst Move = styled.div`\r\nborder-radius: 1vh;\r\nflex: 0 0 40%;\r\nborder: 2px solid black;\r\npadding: 16px;\r\nmargin: 8px;\r\ntext-transform: capitalize;\r\n`\r\nconst TypeWrapper = styled.div`\r\nmargin: 16px auto;\r\n`\r\nconst Warning = styled.h3`\r\ncolor: red;\r\n`\r\n\r\nconst AddToTeamForm = ({ pokemon, theme, setPkmn, addPokemon }) => {\r\n   \r\n    const [ pokemonMoves, setPokemonMoves ] = useState([\r\n        {move: \"\"},\r\n        {move: \"\"},\r\n        {move: \"\"},\r\n        {move: \"\"},\r\n    ])\r\n    const [pokeAbility, setPokeAbility] = useState(\"\");\r\n    const [selectedNature, setSelectedNature ] = useState(\"\")\r\n    const [warning, setWarning] = useState(null)\r\n\r\n    useEffect(() => {\r\n        setPokemonMoves([\r\n            {move: pokemon.moves[0].move.name},\r\n            {move: pokemon.moves[1].move.name},\r\n            {move: pokemon.moves[2].move.name},\r\n            {move: pokemon.moves[3].move.name},\r\n        ])\r\n\r\n        setPokeAbility(pokemon.abilities[0].ability.name);\r\n        setSelectedNature(natures[0].name)\r\n    }, [pokemon.abilities, pokemon.moves])\r\n\r\n    const changeMove = (e, id) => {\r\n        e.preventDefault();\r\n        const pokemonMoveCopy = [...pokemonMoves]\r\n        \r\n        const test = pokemonMoveCopy.map((c, index) => id !== index ? e.target.value === c.move : false)\r\n        \r\n        if(test.some(id => id === true) ){\r\n            pokemonMoveCopy[id].move = pokemonMoves[id].move;\r\n           return setWarning(<Warning>Please select only one of each move</Warning>)\r\n        }else{\r\n            setWarning(null)\r\n            pokemonMoveCopy[id].move = e.target.value\r\n            setPokemonMoves(pokemonMoveCopy)\r\n        }\r\n        \r\n    }\r\n    const setValue = (e, func) => {\r\n        e.preventDefault();\r\n        return func(e.target.value)\r\n    }\r\n\r\n    const stats = pokemon.stats.map(cur => <div key={cur.stat.name}>{cur.stat.name}: {cur.base_stat} </div>);\r\n    const types = pokemon.types.map(cur => <Types key={cur.type.name} type={cur.type.name} />).reverse()\r\n    const moves = Array.from(Array(4), (cur, id) => \r\n        <Move key={id + \"move\"}> \r\n            <select value={pokemonMoves[id].move} onChange={e => changeMove(e, id)}>\r\n                { \r\n                    pokemon.moves.map(cur => \r\n                        <option key={cur.move.name} value={cur.move.name}>{cur.move.name}</option>)\r\n                }\r\n            </select>\r\n        </Move>\r\n    )\r\n\r\n    const natureOptions =(\r\n    <ItemWrapper> \r\n        <select \r\n            value={selectedNature}\r\n            onChange={e => setValue(e, setSelectedNature)}\r\n            >{natures.map(cur => \r\n            <option key={cur.name} value={cur.name}>{cur.name}</option>)}\r\n        </select>\r\n    </ItemWrapper>)\r\n\r\n    const abilities =( \r\n    <ItemWrapper>\r\n        <select \r\n            value={pokeAbility} \r\n            onChange={e => setValue(e, setPokeAbility)}>\r\n                {pokemon.abilities.map(cur => <option value={cur.ability.name} key={cur.ability.name}>{cur.ability.name}</option>)}\r\n        </select>\r\n    </ItemWrapper>)\r\n\r\n    const submit = (e, pokemonMoves) => {\r\n        addPokemon(\r\n            {\r\n                name: pokemon.name, \r\n                moves: pokemonMoves, \r\n                ability: pokeAbility, \r\n                stats: pokemon.stats, \r\n                nature: selectedNature\r\n            }\r\n        )\r\n        setPkmn(null);\r\n    }\r\n\r\n    const form = (\r\n    <Modal>\r\n        <h1>{pokemon.name}</h1>\r\n        <PkmnIcon name={pokemon.name} />\r\n        <TypeWrapper>\r\n            { types }\r\n        </TypeWrapper>\r\n        \r\n        <Form onChange={e => e.preventDefault()}>\r\n            <h2>Ability</h2>\r\n            {abilities}\r\n            <h2>Nature</h2>\r\n            {natureOptions}\r\n                    \r\n            <h2>Stats</h2>\r\n            <StatsWrapper>\r\n                {stats}\r\n            </StatsWrapper>\r\n            \r\n            {warning}\r\n            <h2>Moves</h2>\r\n            <ItemWrapper>\r\n                {moves}\r\n            </ItemWrapper>\r\n            <Button onClick={(e) => submit(e, pokemonMoves)}>Add</Button>\r\n        </Form>\r\n    </Modal>)\r\n\r\n    return (<><Backdrop onClick={() => setPkmn(null)} />{ form }</>)\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addPokemon: (pokemon) => dispatch({type: actionTypes.ADD_TO_TEAM, addPokemon: pokemon}) \r\n}) \r\n\r\nexport default connect(null, mapDispatchToProps)(withTheme(AddToTeamForm));","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PokedexInfo from '../../components/PokedexInfo/PokedexInfo';\r\nimport Loading from '../../components/UI/Loading/Loading';\r\n\r\nimport * as actionTypes from '../../store/actions/actionTypes';\r\nimport Wrapper from '../../components/Wrapper/Wrapper';\r\nimport ErrorHandler from '../../components/UI/ErrorHandler/ErrorHandler';\r\nimport AddToTeamForm from '../AddToTeamForm/AddToTeamForm';\r\n\r\nconst CurrentPokemon = React.memo((\r\n    {\r\n        selectedPokemon, \r\n        pokedexInfo,\r\n        isLoadingCurrent,\r\n        match,\r\n        history,\r\n        fetchSelectedPokemon,\r\n        evoChain,\r\n        fetchCurrentPokemonError\r\n    }) => {\r\n    const [currentPkmn, setPkmn] = useState(null);\r\n\r\n    const fetch = useCallback(\r\n        () => {\r\n            fetchSelectedPokemon(match.params.id);\r\n        },[match.params.id, fetchSelectedPokemon]\r\n    )\r\n    \r\n    useEffect(() => { fetch() }, [fetch])\r\n\r\n    let pokemon = <Loading />\r\n    if(!isLoadingCurrent && !fetchCurrentPokemonError){\r\n        pokemon = <PokedexInfo \r\n        addToTeam={(pokemon) => setPkmn(<AddToTeamForm setPkmn={setPkmn} pokemon={pokemon} />)}\r\n        pokedexInfo={pokedexInfo} \r\n        selectedPokemon={selectedPokemon}\r\n        evoChain={evoChain}\r\n        evolutionClick={(id) => history.push(\"/id=\"+id)} /> \r\n    }else if(fetchCurrentPokemonError){\r\n        pokemon = <ErrorHandler error1 />\r\n    }             \r\n    \r\n    return (\r\n        <>\r\n        {currentPkmn}\r\n        <Wrapper scanner> \r\n            {pokemon}\r\n        </Wrapper>\r\n        </>\r\n    )\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n    selectedPokemonId: state.selectedPokemonId,\r\n    selectedPokemon: state.selectedPokemon,\r\n    pokedexInfo: state.pokedexInfo,\r\n    isLoadingCurrent: state.isLoadingCurrent,\r\n    evoChain: state.evolutionChain,\r\n    fetchCurrentPokemonError: state.fetchCurrentPokemonError\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchSelectedPokemon: (id) => dispatch({type: actionTypes.FETCH_CURRENT_PKMN_START, id: id}),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrentPokemon);","module.exports = __webpack_public_path__ + \"static/media/sort-down-solid.cc204b0f.svg\";","module.exports = __webpack_public_path__ + \"static/media/minus-solid.af448422.svg\";"],"sourceRoot":""}