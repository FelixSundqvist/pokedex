{"version":3,"sources":["components/GBScreen/GBScreen.js","components/Loading/Loading.js","assets/pokedex-lens.svg","store/actions/actionTypes.js","components/PokedexScanner/PokedexScanner.js","components/Header/Header.js","components/CardList/Card/Card.js","components/CardList/CardList.js","containers/Body/Body.js","PokemonGeneration.js","containers/Pokédex/PokedexButtons.js","containers/Pokédex/Pokédex.js","App.js","serviceWorker.js","theme/index.js","store/reducers/reducer.js","store/sagas/sagas.js","index.js"],"names":["withTheme","props","theme","ScreenFrame","styled","div","_templateObject","palette","white","ScreenInner","_templateObject2","black","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","children","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Loading","style","width","height","zIndex","color","module","exports","p","d","__webpack_exports__","FETCH_PKMN_START","FETCH_PKMN_SUCCESS","FETCH_PKMN_FAIL","LOADING_POKEMONS","CHANGE_GEN","FETCH_CURRENT_PKMN_START","FETCH_CURRENT_PKMN_SUCCESS","FETCH_CURRENT_PKMN_FAIL","LOADING_CURRENT_PKMN","PokedexScanner","PokeScanner","lensIcon","react_default","_ref","StyledHeader","header","Header_templateObject","components_PokedexScanner_PokedexScanner","Card","name","id","onClick","selected","StyledCard","Card_templateObject","Image","concat","whyDidYouRender","CardList","items","useMemo","Fragment","map","current","CardList_Card_Card","url","match","split","key","withRouter","pokemons","useRef","Body","Body_templateObject","primaryDark","BodyContainer","Body_templateObject2","GB","_templateObject3","isLoading","components_CardList_CardList","history","push","GBScreen","generations","start","end","PokedexButtons","React","memo","BtnWrapper","PokedexButtons_templateObject","GenerationButton","PokedexButtons_templateObject2","secondary","genButtons","cur","index","genClick","Pokedex","fetchAllPokemons","selectedGen","selectedPokemonId","useEffect","body","containers_Body_Body","loadingCurrent","isLoadingCurrent","flex","Pok_dex_PokedexButtons","connect","state","dispatch","type","actionTypes","gen","CurrentPokemon","lazy","e","then","bind","className","backgroundColor","components_Header_Header","display","alignItems","justifyContent","flexWrap","react_router","path","component","react","fallback","position","top","left","transform","Boolean","window","location","hostname","primary","secondaryDark","initialState","selectedPokemon","pokedexInfo","isLoadingPokemons","reducer","arguments","length","undefined","action","Object","objectSpread","toConsumableArray","startFetchAll","startFetchSelected","mySaga","actions","regenerator_default","wrap","_context","prev","next","put","call","axios","get","res","data","results","catch","err","alert","sent","t0","error","stop","_marked","_context2","console","log","_marked2","_context3","takeEvery","_marked3","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","es","react_router_dom","styled_components_browser_esm","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.56934838.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled, { withTheme } from 'styled-components';\r\n\r\nconst GBScreen = props => {\r\n    const { theme } = props;\r\n\r\n    const ScreenFrame = styled.div`\r\n        background-color: ${theme.palette.white};\r\n        height: 100%;\r\n        width: 100%;\r\n        border: .4vw solid black;\r\n        margin: 0 auto;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    `    \r\n    const ScreenInner = styled.div`\r\n        height: 80%;\r\n        width: 80%;\r\n        background-color: ${theme.palette.black};\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        align-items: center;\r\n        justify-content: space-evenly;\r\n        overflow: scroll;\r\n    `\r\n    return ( \r\n        <ScreenFrame>\r\n            <ScreenInner>\r\n                    {props.children}\r\n            </ScreenInner>\r\n        </ScreenFrame>\r\n    )\r\n}\r\n\r\nexport default withTheme(GBScreen);","import React from 'react'\r\n\r\nconst Loading = () => \r\n    <div style={\r\n        {\r\n            width: \"100%\", \r\n            height: \"100%\", \r\n            zIndex:9999,\r\n            color: \"white\"\r\n        }}>\r\n\r\n            <h1>LOADING</h1>\r\n    \r\n    </div>\r\n\r\nexport default Loading;","module.exports = __webpack_public_path__ + \"static/media/pokedex-lens.e8393639.svg\";","export const FETCH_PKMN_START = 'FETCH_PKMN_START';\r\nexport const FETCH_PKMN_SUCCESS = 'FETCH_PKMN_SUCCESS';\r\nexport const FETCH_PKMN_FAIL = 'FETCH_PKMN_FAILFETCH_PKMN_FAIL';\r\nexport const LOADING_POKEMONS = 'LOADING_POKEMONS';\r\n\r\nexport const CHANGE_GEN = 'CHANGE_GEN';\r\n\r\nexport const SET_CURRENT_PKMN = 'SET_CURRENT_PKMN';\r\nexport const FETCH_CURRENT_PKMN_START = 'FETCH_CURRENT_PKMN_START';\r\nexport const FETCH_CURRENT_PKMN_SUCCESS = 'FETCH_CURRENT_PKMN_SUCCESS';\r\nexport const FETCH_CURRENT_PKMN_FAIL = 'FETCH_CURRENT_PKMN_FAIL';\r\nexport const LOADING_CURRENT_PKMN = 'LOADING_CURRENT_PKMN';\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport lensIcon from '../../assets/pokedex-lens.svg';\r\n\r\nconst PokedexScanner = () => {\r\n    const PokeScanner = styled.div`\r\n        position: absolute;\r\n        bottom: 0;\r\n        left: 0;\r\n        transform: translate(50%, 50%);\r\n        background-image: url(${lensIcon});\r\n        background-size: contain;\r\n        height: 8vw;\r\n        width: 8vw;\r\n    `\r\n    return (<PokeScanner />)\r\n}\r\n\r\nexport default PokedexScanner;","import React from 'react';\r\nimport styled, { withTheme } from 'styled-components';\r\nimport PokedexScanner from '../PokedexScanner/PokedexScanner';\r\n\r\n\r\nconst Header = ({ theme }) => {\r\n\r\n    const StyledHeader = styled.header`\r\n    margin: 0;\r\n    height: 20vh;\r\n    width: 100%;\r\n    background-color: ${theme.palette.black};\r\n    color: white;\r\n    box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.1);\r\n    position: relative;\r\n    h1{\r\n        line-height: 20vh;\r\n        margin: 0;\r\n        font-size: 10vh;\r\n        vertical-align: middle;\r\n    }`\r\n\r\n\r\n    return (\r\n        <StyledHeader>\r\n            <h1>Pokedex</h1>\r\n            <PokedexScanner />\r\n        </StyledHeader>)\r\n}\r\n\r\nexport default withTheme(Header);","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst Card = ({name, id, onClick, selected}) => {\r\n    const StyledCard = styled.div`\r\n        height: 100px;\r\n        width: 100px;\r\n        background-color: white;\r\n        margin: 10px;\r\n        text-transform: capitalize;\r\n        &:hover{\r\n            cursor: pointer;\r\n        }\r\n        font-size: .5rem;\r\n        opacity: ${selected === id ? 1 : 0.5};\r\n        border: ${selected === id ? \"2px solid red \": null};\r\n        &:hover{\r\n            opacity: 0.8;\r\n        }\r\n\r\n        transition: opacity 100ms ease;\r\n    `\r\n    const Image = styled.div`\r\n        margin:0 auto;\r\n        height: 60%;\r\n        width: 60%;\r\n        background-image: ${`url(https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png)`};\r\n        background-repeat: no-repeat;\r\n        background-size: contain;\r\n        background-position: 50% 50%;\r\n    `\r\n\r\n    return (\r\n    <StyledCard onClick={() => onClick(id)} >\r\n        <Image/>\r\n        <p>{name}</p>\r\n    </StyledCard>)\r\n}\r\nCard.whyDidYouRender = true;\r\nexport default Card;","import React, { useMemo } from 'react';\r\nimport Card from './Card/Card';\r\n\r\nconst CardList = ({ items, onClick, selected }) => {\r\n    const cards = useMemo(() =>         \r\n    <>\r\n        {\r\n            items.map(current => <Card \r\n                    onClick={onClick}\r\n                    selected={selected}\r\n                    id={current.url.match(/\\d{1,3}\\/$/)[0].split(\"/\")[0]}\r\n                    key={current.name} \r\n                    name={current.name}/>)\r\n        }\r\n    </>, \r\n    [items, onClick, selected])\r\n\r\n    return cards\r\n}\r\nexport default CardList;","import React, { useRef } from 'react'\r\nimport styled, { withTheme } from 'styled-components';\r\nimport { withRouter } from 'react-router-dom';\r\nimport GBScreen from '../../components/GBScreen/GBScreen';\r\nimport CardList from '../../components/CardList/CardList';\r\nimport Loading from '../../components/Loading/Loading';\r\n\r\nconst Body = props => {\r\n    const pokemons = useRef(null);\r\n    \r\n    const Body = styled.div`\r\n        height: 100%;\r\n        width: 100%;\r\n        padding: 5vh;\r\n        background-color: ${ props.theme.palette.primaryDark };\r\n    `\r\n    const BodyContainer = styled.div`\r\n        position: relative;\r\n        margin: 0 auto;\r\n        width: 80%;\r\n        display: flex;\r\n\r\n        align-items:center;\r\n        justify-content: center;\r\n\r\n        @media screen and (max-width: 500px){\r\n            height: 300px;\r\n            width: 300px;\r\n        }\r\n    `\r\n    const GB = styled.div`\r\n        height: 500px;\r\n        width: 500px; \r\n    `\r\n\r\n    pokemons.current = !props.isLoading \r\n    ? <CardList \r\n        selected={props.selected}\r\n        onClick={(id) => props.history.push(\"/id=\"+id)} \r\n        items = {props.pokemons} /> \r\n    : <Loading />\r\n    return (\r\n        <Body>\r\n            <BodyContainer>\r\n            <GB>\r\n                <GBScreen>\r\n                \r\n                    {pokemons.current}\r\n\r\n                </GBScreen>\r\n            </GB> \r\n            </BodyContainer>\r\n        </Body>\r\n\r\n    )\r\n}\r\nexport default withRouter(withTheme(Body));","const generations = [\r\n    {start: 0, end: 151},\r\n    {start: 151, end: 100},\r\n    {start: 251, end: 135},\r\n    {start: 386, end: 107},\r\n    {start: 493, end: 156},\r\n    {start: 649, end: 72},\r\n    {start: 721, end: 86}\r\n]\r\n\r\nexport default generations;","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport generations from '../../PokemonGeneration';\r\n\r\nconst PokedexButtons = React.memo(props => {\r\n    const BtnWrapper = styled.div`\r\n        width: 80%;\r\n        margin: 0 auto;\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        justify-content: center;\r\n    `\r\n    const GenerationButton = styled.div`\r\n        margin: 8px;\r\n        padding: 8px;\r\n        flex: 0 0 80px;\r\n        border-radius: 1vh;\r\n        background-color: ${props.theme.palette.secondary};\r\n        border: 2px solid blue;\r\n        cursor: pointer;  \r\n    `\r\n    const genButtons = generations.map((cur, index) => \r\n    <GenerationButton key={\"Gen\"+index} onClick={() => props.genClick(index)}>\r\n        Gen {index + 1}\r\n    </GenerationButton>)\r\n\r\n    return <BtnWrapper>{ genButtons }</BtnWrapper>\r\n})\r\nexport default PokedexButtons;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withTheme } from 'styled-components';\r\nimport Body from '../Body/Body';\r\nimport * as actionTypes from '../../store/actions/actionTypes';\r\nimport PokedexButtons from './PokedexButtons';\r\n\r\nconst Pokedex = React.memo(props => {\r\n    const { fetchAllPokemons, selectedGen, selectedPokemonId } = props;\r\n    \r\n    useEffect(() => {\r\n        fetchAllPokemons(selectedGen)\r\n    }, [selectedGen, fetchAllPokemons])\r\n\r\n\r\n    const body = !props.isLoading\r\n        ?        \r\n        <Body \r\n            pokemons={props.pokemons}\r\n            loadingCurrent = {props.isLoadingCurrent}\r\n            selected = {selectedPokemonId}\r\n            /> : null\r\n \r\n\r\n    return (\r\n    <div style={{flex: \"1\"}}>\r\n        <PokedexButtons theme={props.theme} genClick={props.genClick}/>\r\n        {body}\r\n    </div>)\r\n})\r\nconst mapStateToProps = (state) => ({\r\n    pokemons: state.pokemons,\r\n    selectedGen: state.selectedGen,\r\n    selectedPokemonId: state.selectedPokemonId,\r\n    isLoadingCurrent: state.isLoadingCurrent\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchAllPokemons: (selectedGen) => dispatch({type: actionTypes.FETCH_PKMN_START, selectedGen: selectedGen}),\r\n    genClick: (gen) => dispatch({ type: actionTypes.CHANGE_GEN, selectedGen: gen }),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withTheme(Pokedex));","import React, { Suspense } from 'react';\nimport { Route } from 'react-router-dom';\nimport { withTheme } from 'styled-components';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Pokedex from './containers/Pokédex/Pokédex';\nconst CurrentPokemon = React.lazy(() => import('./containers/CurrentPokemon/CurrentPokemon'));\n\nfunction App(props) {\n  return (\n    <div className=\"App\" style={{backgroundColor: props.theme.palette.primaryDark}}>\n      <Header />\n      <div style={\n        { \n          width: \"100%\", \n          display: \"flex\", \n          alignItems: \"center\", \n          justifyContent:\"center\",\n          flexWrap: \"wrap\"\n          }}>\n        <Route path=\"/\" component={Pokedex} />\n        <Suspense fallback={<h1 style={\n          {position: \"absolute\", top: \"50%\", left:\"50%\", transform: \"translate(-50%, -50%)\"}\n          }>LOADING</h1>}>\n          <Route path=\"/id=:id\" component={CurrentPokemon} />\n        </Suspense>\n        \n      </div>\n    </div> \n  );\n}\n\nexport default withTheme(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const theme = {\r\n    palette: {\r\n        primary: '#DC0A2D',\r\n        primaryDark: '#B40824',\r\n        secondary: '#28AAFD',\r\n        secondaryDark: '#166AA3',\r\n        black: '#232323',\r\n        white: '#DEDEDE'\r\n    }\r\n}\r\n\r\nexport default theme;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    pokemons:[],\r\n    selectedGen: 0,\r\n    selectedPokemonId: \"0\",\r\n    selectedPokemon: {},\r\n    pokedexInfo: {},\r\n    isLoadingPokemons: false,\r\n    isLoadingCurrent: false\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case(actionTypes.FETCH_PKMN_SUCCESS): \r\n            return {...state,\r\n                isLoadingPokemons: false,\r\n                pokemons:[\r\n                ...action.pokemons, \r\n            ]};\r\n        case(actionTypes.CHANGE_GEN):\r\n            return{\r\n                ...state,\r\n                selectedGen: action.selectedGen\r\n            }\r\n        case(actionTypes.FETCH_CURRENT_PKMN_SUCCESS):\r\n        return {\r\n            ...state,\r\n            isLoadingCurrent: false,\r\n            selectedPokemonId: action.selectedPokemonId,\r\n            selectedPokemon: action.selectedPokemon,\r\n            pokedexInfo: action.pokedexInfo\r\n        }\r\n        case(actionTypes.LOADING_POKEMONS):\r\n            return{\r\n                ...state,\r\n                isLoadingPokemons:true\r\n            }\r\n        case(actionTypes.LOADING_CURRENT_PKMN):\r\n        return{\r\n            ...state,\r\n            isLoadingCurrent: true\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import { call, put, takeEvery } from 'redux-saga/effects';\r\nimport * as actionTypes from '../actions/actionTypes';\r\nimport axios from 'axios';\r\nimport generations from '../../PokemonGeneration';\r\n/* generations[actions.selectedGen].end */\r\nfunction* startFetchAll(actions){\r\n    try{\r\n        yield put({type: actionTypes.LOADING_POKEMONS })\r\n        const pokemons = yield call(() => axios\r\n        .get(`https://pokeapi.co/api/v2/pokemon/?limit=${generations[actions.selectedGen].end}&offset=${generations[actions.selectedGen].start}`)\r\n        .then(res => res.data)\r\n        .then(data => data.results)\r\n        .catch(err => alert(err))\r\n       );\r\n       \r\n        yield put({type: actionTypes.FETCH_PKMN_SUCCESS, pokemons: pokemons})\r\n    }catch(e) {\r\n        yield put({type: actionTypes.FETCH_PKMN_FAIL, error: e})\r\n    }\r\n}\r\n\r\nfunction* startFetchSelected(actions){\r\n\r\n    try{\r\n        yield put({type: actionTypes.LOADING_CURRENT_PKMN })\r\n        const selectedPokemon = yield call(\r\n            ()=> axios.get('https://pokeapi.co/api/v2/pokemon/'+actions.id)\r\n            .then(res => res.data)\r\n            .then(data => data)\r\n            .catch(err => console.log(err)));\r\n\r\n        const pokedexInfo = yield call(\r\n            ()=> axios.get('https://pokeapi.co/api/v2/pokemon-species/'+actions.id)\r\n            .then(res => res.data)\r\n            .then(data => data)\r\n            .catch(err => console.log(err)));  \r\n\r\n        yield put({\r\n            type: actionTypes.FETCH_CURRENT_PKMN_SUCCESS, \r\n            selectedPokemonId: actions.id,\r\n            selectedPokemon: selectedPokemon,\r\n            pokedexInfo: pokedexInfo});\r\n    }catch(e){\r\n        yield put({type: actionTypes.FETCH_CURRENT_PKMN_FAIL, error: e});\r\n    }\r\n}\r\n\r\nfunction* mySaga() {\r\n    yield takeEvery(actionTypes.FETCH_PKMN_START, startFetchAll);\r\n    yield takeEvery(actionTypes.FETCH_CURRENT_PKMN_START, startFetchSelected);\r\n}\r\n\r\nexport default mySaga;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport './index.css';\nimport { ThemeProvider } from 'styled-components';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport theme from './theme';\nimport reducer from './store/reducers/reducer';\nimport mySaga from './store/sagas/sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducer, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(mySaga);\n\nif (process.env.NODE_ENV !== 'production') {\n    const whyDidYouRender = require('@welldone-software/why-did-you-render');\n    whyDidYouRender(React);\n}\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <ThemeProvider theme={theme}><App /></ThemeProvider> \n        </BrowserRouter>\n    </Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}