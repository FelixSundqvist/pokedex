{"version":3,"sources":["components/Loading/Loading.js","utility/index.js","components/UI/Button/Button.js","components/GBScreen/GBScreen.js","components/CardList/Card/Card.js","components/Wrapper/Wrapper.js","assets/pokedex-lens.svg","store/actions/actionTypes.js","components/UI/PokedexScanner/PokedexScanner.js","PokemonGeneration.js","components/UI/ChangeGenButtons/ChangeGenButtons.js","components/Header/Header.js","components/CardList/CardList.js","components/Body/Body.js","containers/Pokédex/Pokédex.js","App.js","serviceWorker.js","theme/index.js","store/reducers/reducer.js","store/sagas/sagas.js","index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Loading","a","createElement","style","position","top","left","width","height","zIndex","color","d","__webpack_exports__","getIDFromURL","checkLetter","roundNum","url","match","split","str","toUpperCase","replace","round","Number","parseFloat","toFixed","withTheme","props","StyledButton","styled","div","_templateObject","theme","palette","secondary","react__WEBPACK_IMPORTED_MODULE_1___default","onClick","children","ScreenFrame","ScreenInner","_templateObject2","black","Card","_ref","name","id","selected","StyledCard","Image","concat","whyDidYouRender","StyledWrapper","primaryDark","module","exports","p","FETCH_PKMN_START","FETCH_PKMN_SUCCESS","FETCH_PKMN_FAIL","LOADING_POKEMONS","CHANGE_GEN","FETCH_CURRENT_PKMN_START","FETCH_CURRENT_PKMN_SUCCESS","FETCH_CURRENT_PKMN_FAIL","LOADING_CURRENT_PKMN","FETCH_EVO_CHAIN_START","FETCH_EVO_CHAIN_SUCCESS","FETCH_EVO_CHAIN_FAIL","PokedexScanner","PokeScanner","lensIcon","react_default","generations","start","end","ChangeGenButtons","React","memo","BtnWrapper","ChangeGenButtons_templateObject","genButtons","map","cur","index","Button","key","genClick","connect","dispatch","gen","type","actionTypes","selectedGen","StyledHeader","header","Header_templateObject","ChangeGenButtons_ChangeGenButtons","UI_PokedexScanner_PokedexScanner","CardList","items","useMemo","Fragment","current","withRouter","pokemons","useRef","Body","Body_templateObject","GB","isLoading","components_CardList_CardList","history","push","GBScreen","Pokedex","fetchAllPokemons","selectedPokemonId","useEffect","body","components_Body_Body","loadingCurrent","isLoadingCurrent","Wrapper","state","CurrentPokemon","lazy","e","then","bind","className","backgroundColor","primary","components_Header_Header","display","flexWrap","overflow","react_router","path","component","react","fallback","Boolean","window","location","hostname","secondaryDark","white","initialState","selectedPokemon","pokedexInfo","evolutionChain","isLoadingPokemons","newState","oldState","Object","objectSpread","reducer","arguments","length","undefined","action","updateState","toConsumableArray","fetchPkmnSuccess","fetchCurrentPkmnSuccess","startFetchAll","startFetchSelected","startFetchEvoChain","mySaga","actions","regenerator_default","wrap","_context","prev","next","put","call","axios","get","res","data","results","catch","err","alert","sent","t0","error","stop","_marked","_context2","console","log","_marked2","evoChain","_context3","evoChainURL","_marked3","_context4","takeEvery","_marked4","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","es","react_router_dom","styled_components_browser_esm","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7c8154d7.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Loading = () => \r\n    <div style={\r\n        {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\", \r\n            height: \"100%\", \r\n            zIndex: 9999,\r\n            color: \"white\"\r\n        }}>\r\n\r\n            <h1>LOADING</h1>\r\n    \r\n    </div>\r\n\r\nexport default Loading;","export const getIDFromURL = (url) => url.match(/\\d{1,3}\\/$/)[0].split(\"/\")[0];\r\nexport const checkLetter = str => str.toUpperCase().replace(/É/, \"E\")\r\nexport const roundNum = (height, round) => Number.parseFloat(height * round).toFixed(2)","import React from 'react'\r\nimport styled, { withTheme } from 'styled-components';\r\n\r\nconst Button = props => {\r\n    const StyledButton = styled.div`\r\n    margin: 8px;\r\n    padding: 8px;\r\n    flex: 0 0 50px;\r\n    border-radius: 2vh;\r\n    background-color: ${props.theme.palette.secondary};\r\n    border: 2px solid blue;\r\n    cursor: pointer;\r\n    font-size: .5;\r\n     &:hover{\r\n        background-color: white;\r\n        color: ${props.theme.palette.secondary}\r\n     }\r\n    `\r\n\r\n    return(<StyledButton onClick={props.onClick}>{props.children}</StyledButton>)\r\n}\r\n\r\nexport default withTheme(Button);","import React from 'react'\r\nimport styled, { withTheme } from 'styled-components';\r\n\r\nconst GBScreen = props => {\r\n    const { theme } = props;\r\n\r\n    const ScreenFrame = styled.div`\r\n        max-height: 800px;\r\n        max-width: 800px;\r\n        min-height: 300px;\r\n        min-width: 300px;\r\n        overflow: scroll;\r\n        margin: 16px auto;\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        align-items: center;\r\n        justify-content: center;\r\n    \r\n    `    \r\n    const ScreenInner = styled.div`\r\n        height: 100%;\r\n        width: 100%;\r\n        background-color: ${theme.palette.black};\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        align-items: center;\r\n        justify-content: center;\r\n    \r\n    `\r\n    return ( \r\n        <ScreenFrame>\r\n            <ScreenInner>\r\n                    {props.children}\r\n            </ScreenInner>\r\n        </ScreenFrame>\r\n    )\r\n}\r\n\r\nexport default withTheme(GBScreen);","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst Card = ({name, id, onClick, selected}) => {\r\n    const StyledCard = styled.div`\r\n        height: 100px;\r\n        width: 100px;\r\n        background-color: white;\r\n        margin: 10px;\r\n        text-transform: capitalize;\r\n        &:hover{\r\n            cursor: pointer;\r\n        }\r\n        font-size: .5rem;\r\n        opacity: ${selected === id ? 1 : 0.5};\r\n        border: ${selected === id ? \"2px solid red \": null};\r\n        &:hover{\r\n            opacity: 0.8;\r\n        }\r\n        transition: opacity 100ms ease;\r\n    `\r\n    const Image = styled.div`\r\n        margin:0 auto;\r\n        height: 60%;\r\n        width: 60%;\r\n        background-image: ${`url(https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png)`};\r\n        background-repeat: no-repeat;\r\n        background-size: contain;\r\n        background-position: 50% 50%;\r\n    `\r\n\r\n    return (\r\n    <StyledCard onClick={() => onClick(id)} >\r\n        <Image/>\r\n        <p>{name}</p>\r\n    </StyledCard>)\r\n}\r\nCard.whyDidYouRender = true;\r\nexport default Card;","import React from 'react'\r\nimport styled, { withTheme } from 'styled-components';\r\n\r\nconst Wrapper = ({ theme, children }) => {\r\n    const StyledWrapper = styled.div`\r\n    position: relative;\r\n    min-height: 80vh;\r\n    flex: 1;\r\n    margin: 8px;\r\n    background-color: ${theme.palette.primaryDark};\r\n    border: .3vw solid ${theme.palette.black};\r\n    box-shadow: 5px 10px 10px ${theme.palette.black};\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;`\r\n\r\n    return <StyledWrapper>{children}</StyledWrapper>\r\n}\r\n\r\nexport default withTheme(Wrapper)","module.exports = __webpack_public_path__ + \"static/media/pokedex-lens.e8393639.svg\";","export const FETCH_PKMN_START = 'FETCH_PKMN_START';\r\nexport const FETCH_PKMN_SUCCESS = 'FETCH_PKMN_SUCCESS';\r\nexport const FETCH_PKMN_FAIL = 'FETCH_PKMN_FAILFETCH_PKMN_FAIL';\r\nexport const LOADING_POKEMONS = 'LOADING_POKEMONS';\r\n\r\nexport const CHANGE_GEN = 'CHANGE_GEN';\r\n\r\nexport const SET_CURRENT_PKMN = 'SET_CURRENT_PKMN';\r\nexport const FETCH_CURRENT_PKMN_START = 'FETCH_CURRENT_PKMN_START';\r\nexport const FETCH_CURRENT_PKMN_SUCCESS = 'FETCH_CURRENT_PKMN_SUCCESS';\r\nexport const FETCH_CURRENT_PKMN_FAIL = 'FETCH_CURRENT_PKMN_FAIL';\r\nexport const LOADING_CURRENT_PKMN = 'LOADING_CURRENT_PKMN';\r\n\r\nexport const FETCH_EVO_CHAIN = 'FETCH_EVO_CHAIN';\r\nexport const FETCH_EVO_CHAIN_START = 'FETCH_EVO_CHAIN_START';\r\nexport const FETCH_EVO_CHAIN_SUCCESS = 'FETCH_EVO_SCHAIN_UCCESS';\r\nexport const FETCH_EVO_CHAIN_FAIL = 'FETCH_EVO_CHAIN_FAIL';\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport lensIcon from '../../../assets/pokedex-lens.svg';\r\n\r\nconst PokedexScanner = () => {\r\n    const PokeScanner = styled.div`\r\n        position: absolute;\r\n        bottom: 0;\r\n        left: 0;\r\n\r\n        background-image: url(${lensIcon});\r\n        background-size: contain;\r\n        height: 8vw;\r\n        width: 8vw;\r\n    `\r\n    return (<PokeScanner />)\r\n}\r\n\r\nexport default PokedexScanner;","const generations = [\r\n    {start: 0, end: 151},\r\n    {start: 151, end: 100},\r\n    {start: 251, end: 135},\r\n    {start: 386, end: 107},\r\n    {start: 493, end: 156},\r\n    {start: 649, end: 72},\r\n    {start: 721, end: 86}\r\n]\r\n\r\nexport default generations;","import React from 'react'\r\nimport styled, { withTheme } from 'styled-components';\r\nimport generations from '../../../PokemonGeneration';\r\nimport Button from '../Button/Button';\r\n\r\nconst ChangeGenButtons = React.memo(props => {\r\n    const BtnWrapper = styled.div`\r\n        margin: 2vh auto;\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        justify-content: center;\r\n        align-items: center;\r\n        line-height: 1;\r\n    `\r\n    const genButtons = generations.map((cur, index) => \r\n    <Button key={\"Gen\"+index} onClick={() => props.genClick(index)}>Gen {index + 1} </Button>)\r\n\r\n    return <BtnWrapper>{ genButtons }</BtnWrapper>\r\n})\r\nexport default withTheme(ChangeGenButtons);","import React from 'react';\r\nimport styled, { withTheme } from 'styled-components';\r\nimport { connect } from 'react-redux';\r\nimport PokedexScanner from '../UI/PokedexScanner/PokedexScanner';\r\nimport ChangeGenButtons from '../UI/ChangeGenButtons/ChangeGenButtons';\r\nimport * as actionTypes from '../../store/actions/actionTypes';\r\n\r\nconst Header = props => {\r\n    const { theme } = props;\r\n    const StyledHeader = styled.header`\r\n    margin: 0;\r\n    width: 100%;\r\n    background-color: ${theme.palette.black};\r\n    font-family: sans-serif;\r\n    color: white;\r\n    box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.1);\r\n    position: relative;\r\n    h1{\r\n        line-height: 20vh;\r\n        margin: 0;\r\n        font-size: 6vw;\r\n        vertical-align: middle;\r\n    }`\r\n\r\n\r\n    return (\r\n        <StyledHeader>\r\n            <h1>Pokedex</h1>\r\n            <ChangeGenButtons genClick={props.genClick} />\r\n            <PokedexScanner />\r\n            \r\n        </StyledHeader>)\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    genClick: (gen) => dispatch({ type: actionTypes.CHANGE_GEN, selectedGen: gen }),\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(withTheme(Header));","import React, { useMemo } from 'react';\r\nimport Card from './Card/Card';\r\nimport { getIDFromURL } from '../../utility';\r\n\r\nconst CardList = ({ items, onClick, selected }) => {\r\n    const cards = useMemo(() =>         \r\n    <>\r\n        {\r\n            items.map(current => <Card \r\n                    onClick={onClick}\r\n                    selected={selected}\r\n                    id={getIDFromURL(current.url)}\r\n                    key={current.name} \r\n                    name={current.name}/>)\r\n        }\r\n    </>, \r\n    [items, onClick, selected])\r\n\r\n    return cards\r\n}\r\nexport default CardList;","import React, { useRef } from 'react'\r\nimport styled, { withTheme } from 'styled-components';\r\nimport { withRouter } from 'react-router-dom';\r\nimport GBScreen from '../../components/GBScreen/GBScreen';\r\nimport CardList from '../../components/CardList/CardList';\r\nimport Loading from '../../components/Loading/Loading';\r\n\r\nconst Body = props => {\r\n    const pokemons = useRef(null);\r\n    \r\n    const Body = styled.div`\r\n        height: 100%;\r\n        width: 100%;\r\n    `\r\n\r\n    const GB = styled.div`\r\n        margin: 0 auto;\r\n    `\r\n\r\n    pokemons.current = !props.isLoading \r\n    ? <CardList \r\n        selected={props.selected}\r\n        onClick={(id) => props.history.push(\"/id=\"+id)} \r\n        items = {props.pokemons} /> \r\n    : <Loading />\r\n    return (\r\n        <Body>\r\n\r\n            <GB>\r\n                <GBScreen>\r\n                \r\n                    {pokemons.current}\r\n\r\n                </GBScreen>\r\n            </GB> \r\n\r\n        </Body>\r\n\r\n    )\r\n}\r\nexport default withRouter(withTheme(Body));","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Body from '../../components/Body/Body';\r\nimport * as actionTypes from '../../store/actions/actionTypes';\r\nimport Wrapper from '../../components/Wrapper/Wrapper';\r\nimport Loading from '../../components/Loading/Loading';\r\n\r\nconst Pokedex = React.memo(props => {\r\n    const { fetchAllPokemons, selectedGen, selectedPokemonId } = props;\r\n    \r\n    useEffect(() => {\r\n        fetchAllPokemons(selectedGen)\r\n    }, [selectedGen, fetchAllPokemons])\r\n    const body = !props.isLoading\r\n        ?        \r\n        <Body \r\n            pokemons={props.pokemons}\r\n            loadingCurrent = {props.isLoadingCurrent}\r\n            selected = {selectedPokemonId}\r\n            /> : <Loading />\r\n \r\n    return (\r\n    <Wrapper>\r\n        {body}\r\n    </Wrapper>)\r\n})\r\nconst mapStateToProps = (state) => ({\r\n    pokemons: state.pokemons,\r\n    selectedGen: state.selectedGen,\r\n    selectedPokemonId: state.selectedPokemonId,\r\n    isLoadingCurrent: state.isLoadingCurrent\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchAllPokemons: (selectedGen) => dispatch({type: actionTypes.FETCH_PKMN_START, selectedGen: selectedGen}),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Pokedex);","import React, { Suspense } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { withTheme } from 'styled-components';\r\nimport './App.css';\r\nimport Header from './components/Header/Header';\r\nimport Pokedex from './containers/Pokédex/Pokédex';\r\nimport Loading from './components/Loading/Loading';\r\nconst CurrentPokemon = React.lazy(() => import('./containers/CurrentPokemon/CurrentPokemon'));\r\n\r\nfunction App(props) {\r\n  return (\r\n    <div className=\"App\" style={{backgroundColor: props.theme.palette.primary}}>\r\n      <Header />\r\n      <div style={\r\n        { \r\n          width: \"100%\", \r\n          display: \"flex\", \r\n          flexWrap: \"wrap\",\r\n          overflow: \"hidden\"\r\n          }}>\r\n        <Route path=\"/\" component={Pokedex} />\r\n        <Suspense fallback={<Loading />}>\r\n          <Route path=\"/id=:id\" component={CurrentPokemon} />\r\n        </Suspense>\r\n        \r\n      </div>\r\n    </div> \r\n  );\r\n}\r\n\r\nexport default withTheme(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const theme = {\r\n    palette: {\r\n        primary: '#DC0A2D',\r\n        primaryDark: '#B40824',\r\n        secondary: '#28AAFD',\r\n        secondaryDark: '#166AA3',\r\n        black: '#232323',\r\n        white: '#DEDEDE'\r\n    }\r\n}\r\n\r\nexport default theme;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    pokemons:[],\r\n    selectedGen: 0,\r\n    selectedPokemonId: \"0\",\r\n    selectedPokemon: {},\r\n    pokedexInfo: {},\r\n    evolutionChain: {},\r\n    isLoadingPokemons: false,\r\n    isLoadingCurrent: false\r\n}\r\nconst newState = (oldState, newState) =>({\r\n    ...oldState,\r\n    ...newState\r\n})\r\nconst fetchPkmnSuccess = (state, pokemons) => ({...state,\r\n    isLoadingPokemons: false,\r\n    pokemons:[\r\n    ...pokemons, \r\n]})\r\nconst fetchCurrentPkmnSuccess = (state, action) => newState(state,{\r\n    isLoadingCurrent: false,\r\n    selectedPokemonId: action.selectedPokemonId,\r\n    selectedPokemon: action.selectedPokemon,\r\n    pokedexInfo: action.pokedexInfo\r\n})\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    const updateState = newState.bind(null, state);\r\n    \r\n    switch(action.type){\r\n        case(actionTypes.FETCH_PKMN_SUCCESS): \r\n            return fetchPkmnSuccess(state, action.pokemons);\r\n        case(actionTypes.CHANGE_GEN):\r\n            return updateState({selectedGen: action.selectedGen})\r\n        case(actionTypes.FETCH_CURRENT_PKMN_SUCCESS):\r\n            return fetchCurrentPkmnSuccess(state, action)\r\n        case(actionTypes.LOADING_POKEMONS):\r\n            return updateState({isLoadingPokemons:true})\r\n        case(actionTypes.LOADING_CURRENT_PKMN):\r\n            return updateState({isLoadingCurrent: true})\r\n        case(actionTypes.FETCH_EVO_CHAIN_SUCCESS):\r\n            return updateState({evolutionChain: action.evolutionChain})\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import { call, put, takeEvery } from 'redux-saga/effects';\r\nimport * as actionTypes from '../actions/actionTypes';\r\nimport axios from 'axios';\r\nimport generations from '../../PokemonGeneration';\r\n/* generations[actions.selectedGen].end */\r\nfunction* startFetchAll(actions){\r\n    try{\r\n        yield put({type: actionTypes.LOADING_POKEMONS })\r\n        const pokemons = yield call(() => axios\r\n        .get(`https://pokeapi.co/api/v2/pokemon/?limit=${generations[actions.selectedGen].end}&offset=${generations[actions.selectedGen].start}`)\r\n        .then(res => res.data)\r\n        .then(data => data.results)\r\n        .catch(err => alert(err))\r\n       );\r\n       \r\n        yield put({type: actionTypes.FETCH_PKMN_SUCCESS, pokemons: pokemons})\r\n    }catch(e) {\r\n        yield put({type: actionTypes.FETCH_PKMN_FAIL, error: e})\r\n    }\r\n}\r\n\r\nfunction* startFetchSelected(actions){\r\n\r\n    try{\r\n        yield put({type: actionTypes.LOADING_CURRENT_PKMN })\r\n        const selectedPokemon = yield call(\r\n            ()=> axios.get('https://pokeapi.co/api/v2/pokemon/'+actions.id)\r\n            .then(res => res.data)\r\n            .then(data => data)\r\n            .catch(err => console.log(err)));\r\n\r\n        const pokedexInfo = yield call(\r\n            ()=> axios.get('https://pokeapi.co/api/v2/pokemon-species/'+actions.id)\r\n            .then(res => res.data)\r\n            .then(data => data)\r\n            .catch(err => console.log(err)));  \r\n\r\n        yield put({\r\n            type: actionTypes.FETCH_CURRENT_PKMN_SUCCESS, \r\n            selectedPokemonId: actions.id,\r\n            selectedPokemon: selectedPokemon,\r\n            pokedexInfo: pokedexInfo});\r\n    }catch(e){\r\n        yield put({type: actionTypes.FETCH_CURRENT_PKMN_FAIL, error: e});\r\n    }\r\n}\r\n\r\nfunction* startFetchEvoChain(actions){\r\n   try{ \r\n        const evoChain = yield call(\r\n        () => axios.get(actions.evoChainURL))\r\n        yield put({\r\n        type: actionTypes.FETCH_EVO_CHAIN_SUCCESS,\r\n        evolutionChain: evoChain.data\r\n        })\r\n   }catch(e){\r\n    console.log(e)\r\n    yield put({\r\n        type: actionTypes.FETCH_EVO_CHAIN_FAIL\r\n    })\r\n   }\r\n} \r\n\r\nfunction* mySaga() {\r\n    yield takeEvery(actionTypes.FETCH_PKMN_START, startFetchAll);\r\n    yield takeEvery(actionTypes.FETCH_CURRENT_PKMN_START, startFetchSelected);\r\n    yield takeEvery(actionTypes.FETCH_EVO_CHAIN_START, startFetchEvoChain)\r\n}\r\n\r\nexport default mySaga;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport './index.css';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport theme from './theme';\r\nimport reducer from './store/reducers/reducer';\r\nimport mySaga from './store/sagas/sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(reducer, applyMiddleware(sagaMiddleware));\r\nsagaMiddleware.run(mySaga);\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n    const whyDidYouRender = require('@welldone-software/why-did-you-render');\r\n    whyDidYouRender(React);\r\n}\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <ThemeProvider theme={theme}><App /></ThemeProvider> \r\n        </BrowserRouter>\r\n    </Provider>, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}