{"version":3,"sources":["components/PokedexInfo/EvolutionChain/EvolutionChain.js"],"names":["EvolutionChain","_ref","evoChain","EvolutionWrapper","styled","div","_templateObject","EvoItem","span","_templateObject2","EvoMethodDiv","_templateObject3","ItemImage","img","_templateObject4","chain","evolutionMethod","_ref2","evolution_details","length","map","cur","id","Object","keys","currentMethod","key","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","method","name","replace","includes","src","concat","alt","createEvoItems","filter","current","props","reduce","b","createEvolutionElements","species","createEvolutionMethodEl","evolutionBranch","checkEvolution","evolution","arr","arguments","undefined","push","evolves_to","checkEvoChain","currentBranch","Fragment"],"mappings":"qoCA6HeA,UA1HQ,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SAEhBC,EAAmBC,IAAOC,IAAVC,KAQhBC,EAAUH,IAAOI,KAAVC,KAGPC,EAAeN,IAAOC,IAAVM,KAkBZC,EAAYR,IAAOS,IAAVC,KAKf,GAAGZ,EAASa,MAAM,CACd,IA4CMC,EAAkB,SAAAC,GAAyB,IAAvBC,EAAuBD,EAAvBC,kBACtB,GAAgC,IAA7BA,EAAkBC,OAIrB,OAAOD,EAAkBE,IAAI,SAACC,EAAKC,GAAN,OAAaC,OAAOC,KAAKH,GACjDD,IAAI,SAAAK,GAAa,OApCH,SAACC,EAAKV,EAAiBM,GAE1C,OAAOI,EAAIV,GACTW,EAAAC,EAAAC,cAACtB,EAAD,CAASmB,IAAMV,EAAkBM,EAAKQ,OAAQJ,EAAIV,GAAiBe,MAC7DJ,EAAAC,EAAAC,cAAA,WAAMb,EAAgBgB,QAAQ,KAAM,KAApC,IACKN,EAAIV,GAAiBe,KAAOL,EAAIV,GAAiBe,KAAOL,EAAIV,IAI7DU,EAAIV,IAAoBU,EAAIV,GAAiBe,MAAQf,EAAgBiB,SAAS,QAC5EN,EAAAC,EAAAC,cAACjB,EAAD,CACEsB,IAAG,8CAAAC,OAAgDT,EAAIV,GAAiBe,KAArE,QACHK,IAAKV,EAAIV,GAAiBe,OAC5B,MAGZ,KAoBwBM,CAAehB,EAAKI,EAAeH,KACxDgB,OAAO,SAAAC,GAAO,OAhBI,QAFIvB,EAkBkBuB,MAdpCvB,IAAmBA,EAAgBU,IAAIO,SAAS,YAA+C,aAAjCjB,EAAgBwB,MAAMV,QAJnE,IAACd,MAmB1ByB,OAAO,SAACb,EAAGc,GAAJ,OAAUd,EAAEO,OAAOO,IAAI,KAG7BC,EAA0B,SAACtB,EAAKC,GAAN,OAC5BK,EAAAC,EAAAC,cAACnB,EAAD,CAAcgB,IAAKL,EAAIuB,QAAQb,MAC3BJ,EAAAC,EAAAC,cAACjB,EAAD,CACIsB,IAAG,mDAAAC,OAAqDd,EAAIuB,QAAQb,KAAjE,QACHK,IAAKf,EAAIuB,QAAQb,OACpBV,EAAIuB,QAAQb,OAOfc,EAA0B,SAACxB,EAAKC,GAAN,OAChCK,EAAAC,EAAAC,cAACnB,EAAD,CAAcgB,IAAKL,EAAMC,GAEjBN,EAAgBK,KAIlByB,EAzEiB,SAAjBC,EAAkBC,GAAwB,IAAbC,EAAaC,UAAA/B,OAAA,QAAAgC,IAAAD,UAAA,GAAAA,UAAA,GAAP,GAUrC,OATAD,EAAIG,KAAK,CAACJ,IAFQ,SAAAA,GAAS,OAAIA,EAAUK,YAAcL,EAAUK,WAAWlC,OAAS,EAIlFmC,CAAcN,KACVA,EAAUK,WAAWlC,OAAS,EAC7B8B,EAAIG,KAAKJ,EAAUK,YAEnBL,EAAUK,WAAWjC,IAAI,SAAAC,GAAG,OAAI0B,EAAe1B,EAAK4B,MAGrDA,EA+DaF,CAAe7C,EAASa,OAAOK,IAAI,SAACmC,EAAejC,GAAhB,OACvDK,EAAAC,EAAAC,cAACF,EAAAC,EAAM4B,SAAP,CAAgB9B,IAAK,SAAUJ,GAC1BA,EAAK,EAAIK,EAAAC,EAAAC,cAAA,WAAM0B,EAAcnC,IAAIyB,IAAkC,KACpElB,EAAAC,EAAAC,cAAA,WAAM0B,EAAcnC,IAAIuB,OAGhC,OAAOhB,EAAAC,EAAAC,cAAC1B,EAAD,KAAmB2C","file":"static/js/6.59770750.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst EvolutionChain = ({ evoChain }) => {\r\n\r\n    const EvolutionWrapper = styled.div`\r\n        display: flex;\r\n        overflow: hidden;\r\n        flex-wrap: wrap;\r\n        align-items: center;\r\n        justify-content: space-evenly;\r\n        color: white;\r\n    `\r\n    const EvoItem = styled.span`\r\n        overflow: hidden;\r\n    `\r\n    const EvoMethodDiv = styled.div`   \r\n        padding: 8px;\r\n        margin: 8px;\r\n        min-width: 100px;\r\n        height: 100px;\r\n        word-wrap: break-word;\r\n        font-size: .4vw;\r\n        border: .1vw solid white;\r\n        overflow: auto;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        flex-direction: column;\r\n        @media screen and (max-width: 768px){    \r\n            height: 80px;\r\n            font-size: 1vw;\r\n        }\r\n    `\r\n    const ItemImage = styled.img`\r\n        display: block;\r\n        margin: 8px auto;\r\n        height: 40%;\r\n    `\r\n    if(evoChain.chain){\r\n        const checkEvoChain = evolution => evolution.evolves_to && evolution.evolves_to.length > 0\r\n        const checkEvolution = (evolution, arr = []) => {\r\n            arr.push([evolution]);\r\n    \r\n            if(checkEvoChain(evolution)){\r\n                if(evolution.evolves_to.length > 1){\r\n                    arr.push(evolution.evolves_to) \r\n                }else{\r\n                    evolution.evolves_to.map(cur => checkEvolution(cur, arr))\r\n                }\r\n            }\r\n            return arr\r\n        }\r\n    \r\n        const createEvoItems = (key, evolutionMethod, id) => {\r\n            \r\n            return key[evolutionMethod] \r\n            ? <EvoItem key={ evolutionMethod + id } method={key[evolutionMethod].name}>\r\n                    <div>{evolutionMethod.replace(/_/g, ' ')}: \r\n                        {key[evolutionMethod].name ? key[evolutionMethod].name : key[evolutionMethod]} \r\n                    </div>\r\n                    {\r\n                       \r\n                        key[evolutionMethod] && key[evolutionMethod].name && evolutionMethod.includes(\"item\") \r\n                        ? <ItemImage \r\n                            src={`http://felixsundqvist.org/pokemon/evo-item/${key[evolutionMethod].name}.png`} \r\n                            alt={key[evolutionMethod].name} /> \r\n                        : null\r\n                    }\r\n                </EvoItem>\r\n            : null\r\n        }\r\n    \r\n        const filterEvolutionMethod = (evolutionMethod) => {\r\n            \r\n            if(evolutionMethod === null){\r\n                return false\r\n            }else if(evolutionMethod && evolutionMethod.key.includes(\"trigger\") && evolutionMethod.props.method === \"level-up\"){\r\n                return false;\r\n            }\r\n            else{\r\n                return true;\r\n            }\r\n        }\r\n        const evolutionMethod = ({evolution_details}) => {\r\n            if(evolution_details.length === 0 ){\r\n                return\r\n            }\r\n    \r\n            return evolution_details.map((cur, id) => Object.keys(cur)\r\n                .map(currentMethod => createEvoItems(cur, currentMethod, id))\r\n                .filter(current => filterEvolutionMethod(current)))\r\n            .reduce((a, b) => a.concat(b), []) // flatten\r\n        };\r\n        \r\n        const createEvolutionElements = (cur, id) => \r\n            <EvoMethodDiv key={cur.species.name} >\r\n                <ItemImage \r\n                    src={`http://felixsundqvist.org/pokemon/icons/regular/${cur.species.name}.png`} \r\n                    alt={cur.species.name} /> \r\n                {cur.species.name}</EvoMethodDiv>\r\n    \r\n    \r\n    /*           <Card key={cur.species.name} \r\n                    onClick={onClick} \r\n                id={getIDFromURL(cur.species.url)}\r\n                name={cur.species.name} /> */\r\n        const createEvolutionMethodEl = (cur, id) => \r\n        <EvoMethodDiv key={cur + id}>\r\n            {\r\n                evolutionMethod(cur)\r\n            }\r\n        </EvoMethodDiv>\r\n    \r\n        const evolutionBranch = checkEvolution(evoChain.chain).map((currentBranch, id) => \r\n            <React.Fragment key={\"branch\"+ id}>\r\n                {id > 0 ? <div>{currentBranch.map(createEvolutionMethodEl)}</div> : null}\r\n                <div>{currentBranch.map(createEvolutionElements)}</div>\r\n            </React.Fragment>)\r\n    \r\n        return <EvolutionWrapper>{evolutionBranch}</EvolutionWrapper>\r\n    }\r\n \r\n}   \r\n\r\nexport default EvolutionChain;"],"sourceRoot":""}